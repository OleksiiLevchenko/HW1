{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\specs\\\\test.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  expect\n} = require('@wdio/globals');\nconst LoginPage = require('../pageobjects/login.page');\nconst SecurePage = require('../pageobjects/secure.page');\ndescribe('My Login application', () => {\n  it('should login with valid credentials', async () => {\n    await LoginPage.open();\n    await LoginPage.login('tomsmith', 'SuperSecretPassword!');\n    await expect(SecurePage.flashAlert).toBeExisting();\n    await expect(SecurePage.flashAlert).toHaveTextContaining('You logged into a secure area!');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiTG9naW5QYWdlIiwiU2VjdXJlUGFnZSIsImRlc2NyaWJlIiwiaXQiLCJvcGVuIiwibG9naW4iLCJmbGFzaEFsZXJ0IiwidG9CZUV4aXN0aW5nIiwidG9IYXZlVGV4dENvbnRhaW5pbmciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcV29yazFcXHdlYmRyaXZlcmlvLXRlc3RcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbInRlc3QuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcbmNvbnN0IExvZ2luUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL2xvZ2luLnBhZ2UnKVxuY29uc3QgU2VjdXJlUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL3NlY3VyZS5wYWdlJylcblxuZGVzY3JpYmUoJ015IExvZ2luIGFwcGxpY2F0aW9uJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbG9naW4gd2l0aCB2YWxpZCBjcmVkZW50aWFscycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgTG9naW5QYWdlLm9wZW4oKVxuXG4gICAgICAgIGF3YWl0IExvZ2luUGFnZS5sb2dpbigndG9tc21pdGgnLCAnU3VwZXJTZWNyZXRQYXNzd29yZCEnKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0JlRXhpc3RpbmcoKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0hhdmVUZXh0Q29udGFpbmluZyhcbiAgICAgICAgICAgICdZb3UgbG9nZ2VkIGludG8gYSBzZWN1cmUgYXJlYSEnKVxuICAgIH0pXG59KVxuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDM0MsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDdEQsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsNEJBQTRCLENBQUM7QUFFeERHLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxNQUFNO0VBQ25DQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsWUFBWTtJQUNsRCxNQUFNSCxTQUFTLENBQUNJLElBQUksQ0FBQyxDQUFDO0lBRXRCLE1BQU1KLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQztJQUN6RCxNQUFNUCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0ssVUFBVSxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU1ULE1BQU0sQ0FBQ0csVUFBVSxDQUFDSyxVQUFVLENBQUMsQ0FBQ0Usb0JBQW9CLENBQ3BELGdDQUFnQyxDQUFDO0VBQ3pDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["expect","require","LoginPage","SecurePage","describe","it","open","login","flashAlert","toBeExisting","toHaveTextContaining"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\specs\\","sources":["test.e2e.js"],"sourcesContent":["const { expect } = require('@wdio/globals')\nconst LoginPage = require('../pageobjects/login.page')\nconst SecurePage = require('../pageobjects/secure.page')\n\ndescribe('My Login application', () => {\n    it('should login with valid credentials', async () => {\n        await LoginPage.open()\n\n        await LoginPage.login('tomsmith', 'SuperSecretPassword!')\n        await expect(SecurePage.flashAlert).toBeExisting()\n        await expect(SecurePage.flashAlert).toHaveTextContaining(\n            'You logged into a secure area!')\n    })\n})\n\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,UAAU,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAExDG,QAAQ,CAAC,sBAAsB,EAAE,MAAM;EACnCC,EAAE,CAAC,qCAAqC,EAAE,YAAY;IAClD,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;IAEtB,MAAMJ,SAAS,CAACK,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC;IACzD,MAAMP,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACC,YAAY,CAAC,CAAC;IAClD,MAAMT,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACE,oBAAoB,CACpD,gCAAgC,CAAC;EACzC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1693336488953},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\login.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get inputUsername() {\n    return $('#username');\n  }\n  get inputPassword() {\n    return $('#password');\n  }\n  get btnSubmit() {\n    return $('button[type=\"submit\"]');\n  }\n\n  /**\n   * a method to encapsule automation code to interact with the page\n   * e.g. to login using username and password\n   */\n  async login(username, password) {\n    await this.inputUsername.setValue(username);\n    await this.inputPassword.setValue(password);\n    await this.btnSubmit.click();\n  }\n\n  /**\n   * overwrite specific options to adapt it to page object\n   */\n  open() {\n    return super.open('login');\n  }\n}\nmodule.exports = new LoginPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJMb2dpblBhZ2UiLCJpbnB1dFVzZXJuYW1lIiwiaW5wdXRQYXNzd29yZCIsImJ0blN1Ym1pdCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInNldFZhbHVlIiwiY2xpY2siLCJvcGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFxXb3JrMVxcd2ViZHJpdmVyaW8tdGVzdFxcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsibG9naW4ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7ICQgfSA9IHJlcXVpcmUoJ0B3ZGlvL2dsb2JhbHMnKVxuY29uc3QgUGFnZSA9IHJlcXVpcmUoJy4vcGFnZScpO1xuXG4vKipcbiAqIHN1YiBwYWdlIGNvbnRhaW5pbmcgc3BlY2lmaWMgc2VsZWN0b3JzIGFuZCBtZXRob2RzIGZvciBhIHNwZWNpZmljIHBhZ2VcbiAqL1xuY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBpbnB1dFVzZXJuYW1lICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyN1c2VybmFtZScpO1xuICAgIH1cblxuICAgIGdldCBpbnB1dFBhc3N3b3JkICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNwYXNzd29yZCcpO1xuICAgIH1cblxuICAgIGdldCBidG5TdWJtaXQgKCkge1xuICAgICAgICByZXR1cm4gJCgnYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhIG1ldGhvZCB0byBlbmNhcHN1bGUgYXV0b21hdGlvbiBjb2RlIHRvIGludGVyYWN0IHdpdGggdGhlIHBhZ2VcbiAgICAgKiBlLmcuIHRvIGxvZ2luIHVzaW5nIHVzZXJuYW1lIGFuZCBwYXNzd29yZFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFVzZXJuYW1lLnNldFZhbHVlKHVzZXJuYW1lKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFBhc3N3b3JkLnNldFZhbHVlKHBhc3N3b3JkKTtcbiAgICAgICAgYXdhaXQgdGhpcy5idG5TdWJtaXQuY2xpY2soKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBvdmVyd3JpdGUgc3BlY2lmaWMgb3B0aW9ucyB0byBhZGFwdCBpdCB0byBwYWdlIG9iamVjdFxuICAgICAqL1xuICAgIG9wZW4gKCkge1xuICAgICAgICByZXR1cm4gc3VwZXIub3BlbignbG9naW4nKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IExvZ2luUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsU0FBUyxTQUFTRCxJQUFJLENBQUM7RUFDekI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsYUFBYUEsQ0FBQSxFQUFJO0lBQ2pCLE9BQU9KLENBQUMsQ0FBQyxXQUFXLENBQUM7RUFDekI7RUFFQSxJQUFJSyxhQUFhQSxDQUFBLEVBQUk7SUFDakIsT0FBT0wsQ0FBQyxDQUFDLFdBQVcsQ0FBQztFQUN6QjtFQUVBLElBQUlNLFNBQVNBLENBQUEsRUFBSTtJQUNiLE9BQU9OLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNyQzs7RUFFQTtBQUNKO0FBQ0E7QUFDQTtFQUNJLE1BQU1PLEtBQUtBLENBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFO0lBQzdCLE1BQU0sSUFBSSxDQUFDTCxhQUFhLENBQUNNLFFBQVEsQ0FBQ0YsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxhQUFhLENBQUNLLFFBQVEsQ0FBQ0QsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxTQUFTLENBQUNLLEtBQUssQ0FBQyxDQUFDO0VBQ2hDOztFQUVBO0FBQ0o7QUFDQTtFQUNJQyxJQUFJQSxDQUFBLEVBQUk7SUFDSixPQUFPLEtBQUssQ0FBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQztFQUM5QjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlYLFNBQVMsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","LoginPage","inputUsername","inputPassword","btnSubmit","login","username","password","setValue","click","open","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\pageobjects\\","sources":["login.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get inputUsername () {\n        return $('#username');\n    }\n\n    get inputPassword () {\n        return $('#password');\n    }\n\n    get btnSubmit () {\n        return $('button[type=\"submit\"]');\n    }\n\n    /**\n     * a method to encapsule automation code to interact with the page\n     * e.g. to login using username and password\n     */\n    async login (username, password) {\n        await this.inputUsername.setValue(username);\n        await this.inputPassword.setValue(password);\n        await this.btnSubmit.click();\n    }\n\n    /**\n     * overwrite specific options to adapt it to page object\n     */\n    open () {\n        return super.open('login');\n    }\n}\n\nmodule.exports = new LoginPage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,SAAS,SAASD,IAAI,CAAC;EACzB;AACJ;AACA;EACI,IAAIE,aAAaA,CAAA,EAAI;IACjB,OAAOJ,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIK,aAAaA,CAAA,EAAI;IACjB,OAAOL,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIM,SAASA,CAAA,EAAI;IACb,OAAON,CAAC,CAAC,uBAAuB,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;EACI,MAAMO,KAAKA,CAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC7B,MAAM,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACF,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACD,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC;;EAEA;AACJ;AACA;EACIC,IAAIA,CAAA,EAAI;IACJ,OAAO,KAAK,CAACA,IAAI,CAAC,OAAO,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIX,SAAS,CAAC,CAAC"}},"mtime":1693336488940},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n  /**\n  * Opens a sub page of the page\n  * @param path path of the sub page (e.g. /path/to/page.html)\n  */\n  open(path) {\n    return browser.url(`https://the-internet.herokuapp.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcV29yazFcXHdlYmRyaXZlcmlvLXRlc3RcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBicm93c2VyIH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcblxuLyoqXG4qIG1haW4gcGFnZSBvYmplY3QgY29udGFpbmluZyBhbGwgbWV0aG9kcywgc2VsZWN0b3JzIGFuZCBmdW5jdGlvbmFsaXR5XG4qIHRoYXQgaXMgc2hhcmVkIGFjcm9zcyBhbGwgcGFnZSBvYmplY3RzXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBQYWdlIHtcbiAgICAvKipcbiAgICAqIE9wZW5zIGEgc3ViIHBhZ2Ugb2YgdGhlIHBhZ2VcbiAgICAqIEBwYXJhbSBwYXRoIHBhdGggb2YgdGhlIHN1YiBwYWdlIChlLmcuIC9wYXRoL3RvL3BhZ2UuaHRtbClcbiAgICAqL1xuICAgIG9wZW4gKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGJyb3dzZXIudXJsKGBodHRwczovL3RoZS1pbnRlcm5ldC5oZXJva3VhcHAuY29tLyR7cGF0aH1gKVxuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFRLENBQUMsR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0VBQ3hCO0FBQ0o7QUFDQTtBQUNBO0VBQ0lDLElBQUlBLENBQUVDLElBQUksRUFBRTtJQUNSLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFFLHNDQUFxQ0QsSUFBSyxFQUFDLENBQUM7RUFDcEU7QUFDSixDQUFDIn0=","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\pageobjects\\","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals')\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n    /**\n    * Opens a sub page of the page\n    * @param path path of the sub page (e.g. /path/to/page.html)\n    */\n    open (path) {\n        return browser.url(`https://the-internet.herokuapp.com/${path}`)\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EACxB;AACJ;AACA;AACA;EACIC,IAAIA,CAAEC,IAAI,EAAE;IACR,OAAON,OAAO,CAACO,GAAG,CAAE,sCAAqCD,IAAK,EAAC,CAAC;EACpE;AACJ,CAAC"}},"mtime":1693336488943},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\secure.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get flashAlert() {\n    return $('#flash');\n  }\n}\nmodule.exports = new SecurePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJTZWN1cmVQYWdlIiwiZmxhc2hBbGVydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcV29yazFcXHdlYmRyaXZlcmlvLXRlc3RcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInNlY3VyZS5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgJCB9ID0gcmVxdWlyZSgnQHdkaW8vZ2xvYmFscycpXG5jb25zdCBQYWdlID0gcmVxdWlyZSgnLi9wYWdlJyk7XG5cbi8qKlxuICogc3ViIHBhZ2UgY29udGFpbmluZyBzcGVjaWZpYyBzZWxlY3RvcnMgYW5kIG1ldGhvZHMgZm9yIGEgc3BlY2lmaWMgcGFnZVxuICovXG5jbGFzcyBTZWN1cmVQYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBmbGFzaEFsZXJ0ICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNmbGFzaCcpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU2VjdXJlUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsVUFBVSxTQUFTRCxJQUFJLENBQUM7RUFDMUI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsVUFBVUEsQ0FBQSxFQUFJO0lBQ2QsT0FBT0osQ0FBQyxDQUFDLFFBQVEsQ0FBQztFQUN0QjtBQUNKO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlILFVBQVUsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","SecurePage","flashAlert","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\pageobjects\\","sources":["secure.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get flashAlert () {\n        return $('#flash');\n    }\n}\n\nmodule.exports = new SecurePage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,UAAU,SAASD,IAAI,CAAC;EAC1B;AACJ;AACA;EACI,IAAIE,UAAUA,CAAA,EAAI;IACd,OAAOJ,CAAC,CAAC,QAAQ,CAAC;EACtB;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG,IAAIH,UAAU,CAAC,CAAC"}},"mtime":1693336488945},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\test.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  expect\n} = require('@wdio/globals');\nconst LoginPage = require('../pageobjects/login.page');\nconst SecurePage = require('../pageobjects/secure.page');\ndescribe('My Login application', () => {\n  it('should login with valid credentials', async () => {\n    await LoginPage.open();\n    await LoginPage.login('tomsmith', 'SuperSecretPassword!');\n    await expect(SecurePage.flashAlert).toBeExisting();\n    await expect(SecurePage.flashAlert).toHaveTextContaining('You logged into a secure area!');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiTG9naW5QYWdlIiwiU2VjdXJlUGFnZSIsImRlc2NyaWJlIiwiaXQiLCJvcGVuIiwibG9naW4iLCJmbGFzaEFsZXJ0IiwidG9CZUV4aXN0aW5nIiwidG9IYXZlVGV4dENvbnRhaW5pbmciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbInRlc3QuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcbmNvbnN0IExvZ2luUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL2xvZ2luLnBhZ2UnKVxuY29uc3QgU2VjdXJlUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL3NlY3VyZS5wYWdlJylcblxuZGVzY3JpYmUoJ015IExvZ2luIGFwcGxpY2F0aW9uJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbG9naW4gd2l0aCB2YWxpZCBjcmVkZW50aWFscycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgTG9naW5QYWdlLm9wZW4oKVxuXG4gICAgICAgIGF3YWl0IExvZ2luUGFnZS5sb2dpbigndG9tc21pdGgnLCAnU3VwZXJTZWNyZXRQYXNzd29yZCEnKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0JlRXhpc3RpbmcoKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0hhdmVUZXh0Q29udGFpbmluZyhcbiAgICAgICAgICAgICdZb3UgbG9nZ2VkIGludG8gYSBzZWN1cmUgYXJlYSEnKVxuICAgIH0pXG59KVxuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDM0MsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDdEQsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsNEJBQTRCLENBQUM7QUFFeERHLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxNQUFNO0VBQ25DQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsWUFBWTtJQUNsRCxNQUFNSCxTQUFTLENBQUNJLElBQUksQ0FBQyxDQUFDO0lBRXRCLE1BQU1KLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQztJQUN6RCxNQUFNUCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0ssVUFBVSxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU1ULE1BQU0sQ0FBQ0csVUFBVSxDQUFDSyxVQUFVLENBQUMsQ0FBQ0Usb0JBQW9CLENBQ3BELGdDQUFnQyxDQUFDO0VBQ3pDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["expect","require","LoginPage","SecurePage","describe","it","open","login","flashAlert","toBeExisting","toHaveTextContaining"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\specs\\","sources":["test.e2e.js"],"sourcesContent":["const { expect } = require('@wdio/globals')\nconst LoginPage = require('../pageobjects/login.page')\nconst SecurePage = require('../pageobjects/secure.page')\n\ndescribe('My Login application', () => {\n    it('should login with valid credentials', async () => {\n        await LoginPage.open()\n\n        await LoginPage.login('tomsmith', 'SuperSecretPassword!')\n        await expect(SecurePage.flashAlert).toBeExisting()\n        await expect(SecurePage.flashAlert).toHaveTextContaining(\n            'You logged into a secure area!')\n    })\n})\n\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,UAAU,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAExDG,QAAQ,CAAC,sBAAsB,EAAE,MAAM;EACnCC,EAAE,CAAC,qCAAqC,EAAE,YAAY;IAClD,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;IAEtB,MAAMJ,SAAS,CAACK,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC;IACzD,MAAMP,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACC,YAAY,CAAC,CAAC;IAClD,MAAMT,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACE,oBAAoB,CACpD,gCAAgC,CAAC;EACzC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1693336488953},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\login.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get inputUsername() {\n    return $('#username');\n  }\n  get inputPassword() {\n    return $('#password');\n  }\n  get btnSubmit() {\n    return $('button[type=\"submit\"]');\n  }\n\n  /**\n   * a method to encapsule automation code to interact with the page\n   * e.g. to login using username and password\n   */\n  async login(username, password) {\n    await this.inputUsername.setValue(username);\n    await this.inputPassword.setValue(password);\n    await this.btnSubmit.click();\n  }\n\n  /**\n   * overwrite specific options to adapt it to page object\n   */\n  open() {\n    return super.open('login');\n  }\n}\nmodule.exports = new LoginPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJMb2dpblBhZ2UiLCJpbnB1dFVzZXJuYW1lIiwiaW5wdXRQYXNzd29yZCIsImJ0blN1Ym1pdCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInNldFZhbHVlIiwiY2xpY2siLCJvcGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFx3b3JrMVxcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsibG9naW4ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7ICQgfSA9IHJlcXVpcmUoJ0B3ZGlvL2dsb2JhbHMnKVxuY29uc3QgUGFnZSA9IHJlcXVpcmUoJy4vcGFnZScpO1xuXG4vKipcbiAqIHN1YiBwYWdlIGNvbnRhaW5pbmcgc3BlY2lmaWMgc2VsZWN0b3JzIGFuZCBtZXRob2RzIGZvciBhIHNwZWNpZmljIHBhZ2VcbiAqL1xuY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBpbnB1dFVzZXJuYW1lICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyN1c2VybmFtZScpO1xuICAgIH1cblxuICAgIGdldCBpbnB1dFBhc3N3b3JkICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNwYXNzd29yZCcpO1xuICAgIH1cblxuICAgIGdldCBidG5TdWJtaXQgKCkge1xuICAgICAgICByZXR1cm4gJCgnYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhIG1ldGhvZCB0byBlbmNhcHN1bGUgYXV0b21hdGlvbiBjb2RlIHRvIGludGVyYWN0IHdpdGggdGhlIHBhZ2VcbiAgICAgKiBlLmcuIHRvIGxvZ2luIHVzaW5nIHVzZXJuYW1lIGFuZCBwYXNzd29yZFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFVzZXJuYW1lLnNldFZhbHVlKHVzZXJuYW1lKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFBhc3N3b3JkLnNldFZhbHVlKHBhc3N3b3JkKTtcbiAgICAgICAgYXdhaXQgdGhpcy5idG5TdWJtaXQuY2xpY2soKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBvdmVyd3JpdGUgc3BlY2lmaWMgb3B0aW9ucyB0byBhZGFwdCBpdCB0byBwYWdlIG9iamVjdFxuICAgICAqL1xuICAgIG9wZW4gKCkge1xuICAgICAgICByZXR1cm4gc3VwZXIub3BlbignbG9naW4nKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IExvZ2luUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsU0FBUyxTQUFTRCxJQUFJLENBQUM7RUFDekI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsYUFBYUEsQ0FBQSxFQUFJO0lBQ2pCLE9BQU9KLENBQUMsQ0FBQyxXQUFXLENBQUM7RUFDekI7RUFFQSxJQUFJSyxhQUFhQSxDQUFBLEVBQUk7SUFDakIsT0FBT0wsQ0FBQyxDQUFDLFdBQVcsQ0FBQztFQUN6QjtFQUVBLElBQUlNLFNBQVNBLENBQUEsRUFBSTtJQUNiLE9BQU9OLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNyQzs7RUFFQTtBQUNKO0FBQ0E7QUFDQTtFQUNJLE1BQU1PLEtBQUtBLENBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFO0lBQzdCLE1BQU0sSUFBSSxDQUFDTCxhQUFhLENBQUNNLFFBQVEsQ0FBQ0YsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxhQUFhLENBQUNLLFFBQVEsQ0FBQ0QsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxTQUFTLENBQUNLLEtBQUssQ0FBQyxDQUFDO0VBQ2hDOztFQUVBO0FBQ0o7QUFDQTtFQUNJQyxJQUFJQSxDQUFBLEVBQUk7SUFDSixPQUFPLEtBQUssQ0FBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQztFQUM5QjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlYLFNBQVMsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","LoginPage","inputUsername","inputPassword","btnSubmit","login","username","password","setValue","click","open","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\pageobjects\\","sources":["login.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get inputUsername () {\n        return $('#username');\n    }\n\n    get inputPassword () {\n        return $('#password');\n    }\n\n    get btnSubmit () {\n        return $('button[type=\"submit\"]');\n    }\n\n    /**\n     * a method to encapsule automation code to interact with the page\n     * e.g. to login using username and password\n     */\n    async login (username, password) {\n        await this.inputUsername.setValue(username);\n        await this.inputPassword.setValue(password);\n        await this.btnSubmit.click();\n    }\n\n    /**\n     * overwrite specific options to adapt it to page object\n     */\n    open () {\n        return super.open('login');\n    }\n}\n\nmodule.exports = new LoginPage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,SAAS,SAASD,IAAI,CAAC;EACzB;AACJ;AACA;EACI,IAAIE,aAAaA,CAAA,EAAI;IACjB,OAAOJ,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIK,aAAaA,CAAA,EAAI;IACjB,OAAOL,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIM,SAASA,CAAA,EAAI;IACb,OAAON,CAAC,CAAC,uBAAuB,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;EACI,MAAMO,KAAKA,CAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC7B,MAAM,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACF,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACD,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC;;EAEA;AACJ;AACA;EACIC,IAAIA,CAAA,EAAI;IACJ,OAAO,KAAK,CAACA,IAAI,CAAC,OAAO,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIX,SAAS,CAAC,CAAC"}},"mtime":1693336488940},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n  /**\n  * Opens a sub page of the page\n  * @param path path of the sub page (e.g. /path/to/page.html)\n  */\n  open(path) {\n    return browser.url(`https://the-internet.herokuapp.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBicm93c2VyIH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcblxuLyoqXG4qIG1haW4gcGFnZSBvYmplY3QgY29udGFpbmluZyBhbGwgbWV0aG9kcywgc2VsZWN0b3JzIGFuZCBmdW5jdGlvbmFsaXR5XG4qIHRoYXQgaXMgc2hhcmVkIGFjcm9zcyBhbGwgcGFnZSBvYmplY3RzXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBQYWdlIHtcbiAgICAvKipcbiAgICAqIE9wZW5zIGEgc3ViIHBhZ2Ugb2YgdGhlIHBhZ2VcbiAgICAqIEBwYXJhbSBwYXRoIHBhdGggb2YgdGhlIHN1YiBwYWdlIChlLmcuIC9wYXRoL3RvL3BhZ2UuaHRtbClcbiAgICAqL1xuICAgIG9wZW4gKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGJyb3dzZXIudXJsKGBodHRwczovL3RoZS1pbnRlcm5ldC5oZXJva3VhcHAuY29tLyR7cGF0aH1gKVxuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFRLENBQUMsR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0VBQ3hCO0FBQ0o7QUFDQTtBQUNBO0VBQ0lDLElBQUlBLENBQUVDLElBQUksRUFBRTtJQUNSLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFFLHNDQUFxQ0QsSUFBSyxFQUFDLENBQUM7RUFDcEU7QUFDSixDQUFDIn0=","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\pageobjects\\","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals')\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n    /**\n    * Opens a sub page of the page\n    * @param path path of the sub page (e.g. /path/to/page.html)\n    */\n    open (path) {\n        return browser.url(`https://the-internet.herokuapp.com/${path}`)\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EACxB;AACJ;AACA;AACA;EACIC,IAAIA,CAAEC,IAAI,EAAE;IACR,OAAON,OAAO,CAACO,GAAG,CAAE,sCAAqCD,IAAK,EAAC,CAAC;EACpE;AACJ,CAAC"}},"mtime":1693336488943},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\secure.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get flashAlert() {\n    return $('#flash');\n  }\n}\nmodule.exports = new SecurePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJTZWN1cmVQYWdlIiwiZmxhc2hBbGVydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInNlY3VyZS5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgJCB9ID0gcmVxdWlyZSgnQHdkaW8vZ2xvYmFscycpXG5jb25zdCBQYWdlID0gcmVxdWlyZSgnLi9wYWdlJyk7XG5cbi8qKlxuICogc3ViIHBhZ2UgY29udGFpbmluZyBzcGVjaWZpYyBzZWxlY3RvcnMgYW5kIG1ldGhvZHMgZm9yIGEgc3BlY2lmaWMgcGFnZVxuICovXG5jbGFzcyBTZWN1cmVQYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBmbGFzaEFsZXJ0ICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNmbGFzaCcpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU2VjdXJlUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsVUFBVSxTQUFTRCxJQUFJLENBQUM7RUFDMUI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsVUFBVUEsQ0FBQSxFQUFJO0lBQ2QsT0FBT0osQ0FBQyxDQUFDLFFBQVEsQ0FBQztFQUN0QjtBQUNKO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlILFVBQVUsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","SecurePage","flashAlert","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\pageobjects\\","sources":["secure.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get flashAlert () {\n        return $('#flash');\n    }\n}\n\nmodule.exports = new SecurePage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,UAAU,SAASD,IAAI,CAAC;EAC1B;AACJ;AACA;EACI,IAAIE,UAAUA,CAAA,EAAI;IACd,OAAOJ,CAAC,CAAC,QAAQ,CAAC;EACtB;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG,IAAIH,UAAU,CAAC,CAAC"}},"mtime":1693336488945},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v7.webdriver.io/docs/api');\n  await browser.pause(2000);\n  //getAttribute\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v7.webdriver.io/docs/api');\n  await browser.pause(1000);\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.docTitle_Oumm').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.docTitle_Oumm');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter1.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //isFocused\n  const blog = await $('//a[@href=\"/blog\"]');\n  await browser.pause(1000);\n  console.log('blog isFocused() before click:' + (await blog.isFocused()));\n  await browser.pause(1000);\n  await blog.click();\n  await browser.pause(7000);\n  console.log('blog isFocused() after click:' + (await blog.isFocused()));\n  await browser.pause(5000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsImJyb3dzZXIiLCJ1cmwiLCJwYXVzZSIsIkpTT05XaXJlIiwiJCIsIm5ld3dpbmQiLCJnZXRBdHRyaWJ1dGUiLCJuZXdXaW5kb3ciLCJXaWtpQnV0dG9uIiwiaXNEaXNwbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwic3dpdGNoV2luZG93Iiwid2FpdFVudGlsIiwiZ2V0VGV4dCIsImVsZW0iLCJzYXZlU2NyZWVuc2hvdCIsIlR3aXR0ZXIiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJzY3JvbGwiLCJzY3JvbGxJbnRvVmlldyIsIlR3aXR0ZXIxIiwiaXNEaXNwbGF5ZWQxIiwiaXNEaXNwbGF5ZWRJblZpZXdwb3J0MSIsImJsb2ciLCJpc0ZvY3VzZWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFx3b3JrMVxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaXQoJ0hvbWV3b3JrMScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgIC8vZ2V0QXR0cmlidXRlXHJcbiAgICBjb25zdCBKU09OV2lyZSA9IGF3YWl0ICQoJy8vKlt0ZXh0KCk9XCJKU09OV2lyZSBwcm90b2NvbFwiXScpO1xyXG4gICAgY29uc3QgbmV3d2luZCA9IGF3YWl0IEpTT05XaXJlLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgLy9uZXdXaW5kb3dcclxuICAgIGJyb3dzZXIubmV3V2luZG93KG5ld3dpbmQpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFdpa2lCdXR0b24gPSBhd2FpdCAkKCdbaHJlZj1cIi9TZWxlbml1bUhRL3NlbGVuaXVtL3dpa2lcIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgV2lraUJ1dHRvbi5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0lzIERpc3BsYXllZD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zd2l0Y2hXaW5kb3dcclxuICAgIGJyb3dzZXIuc3dpdGNoV2luZG93KCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vd2FpdFVudGlsXHJcbiAgICBicm93c2VyLndhaXRVbnRpbCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoJy5kb2NUaXRsZV9PdW1tJykuZ2V0VGV4dCgpO1xyXG4gICAgfSwgMjAwMCwgJ2Jsb2cgaXMgbm90IGRpYXBsYXllZCcpO1xyXG4gICAgLy9zYXZlU2NyZWVuc2hvdFxyXG4gICAgY29uc3QgZWxlbSA9ICQoJy5kb2NUaXRsZV9PdW1tJyk7XHJcbiAgICBlbGVtLnNhdmVTY3JlZW5zaG90KCdlbGVtU2NyZWVuc2hvdC5wbmcnKVxyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFR3aXR0ZXIgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgVHdpdHRlci5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRGlzcGxheWVkSW5WaWV3cG9ydFxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCA9IGF3YWl0ICQoJ1tocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS93ZWJkcml2ZXJpb1wiXScpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgaXMgZGlzcGxheWVkIGluIFZpZXdQb3J0PzogJyArIGF3YWl0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zY3JvbGxJbnRyb1ZpZXcoKVxyXG4gICAgY29uc3Qgc2Nyb2xsID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgYXdhaXQgc2Nyb2xsLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAvL2lzRGlzcGxheWVkIzFcclxuICAgIGNvbnN0IFR3aXR0ZXIxID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBpc0Rpc3BsYXllZDEgPSBhd2FpdCBUd2l0dGVyMS5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkMSk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9pc0Rpc3BsYXllZEluVmlld3BvcnQjMVxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydDEgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKS5pc0Rpc3BsYXllZEluVmlld3BvcnQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdUd2l0dGV0IGlzIGRpc3BsYXllZCBpbiBWaWV3UG9ydD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZEluVmlld3BvcnQxKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRm9jdXNlZFxyXG4gICAgY29uc3QgYmxvZyA9IGF3YWl0ICQoJy8vYVtAaHJlZj1cIi9ibG9nXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ2Jsb2cgaXNGb2N1c2VkKCkgYmVmb3JlIGNsaWNrOicgKyBhd2FpdCBibG9nLmlzRm9jdXNlZCgpKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcblxyXG4gICAgYXdhaXQgYmxvZy5jbGljaygpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSg3MDAwKTtcclxuICAgIGNvbnNvbGUubG9nKCdibG9nIGlzRm9jdXNlZCgpIGFmdGVyIGNsaWNrOicgKyBhd2FpdCBibG9nLmlzRm9jdXNlZCgpKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwMCk7XHJcblxyXG5cclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWTtFQUN4QixNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQztFQUNyRCxNQUFNRCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0VBQzNELE1BQU1DLE9BQU8sR0FBRyxNQUFNRixRQUFRLENBQUNHLFlBQVksQ0FBQyxNQUFNLENBQUM7RUFDbkQ7RUFDQU4sT0FBTyxDQUFDTyxTQUFTLENBQUNGLE9BQU8sQ0FBQztFQUMxQixNQUFNTCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNTSxVQUFVLEdBQUcsTUFBTUosQ0FBQyxDQUFDLG9DQUFvQyxDQUFDO0VBQ2hFSyxXQUFXLEdBQUcsTUFBTUQsVUFBVSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUM1Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCLElBQUcsTUFBTUYsV0FBVyxF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","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(2000);\r\n    //getAttribute\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(1000);\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n        return $('.docTitle_Oumm').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.docTitle_Oumm');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter1.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //isFocused\r\n    const blog = await $('//a[@href=\"/blog\"]');\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() before click:' + await blog.isFocused());\r\n    await browser.pause(1000);\r\n\r\n    await blog.click();\r\n    await browser.pause(7000);\r\n    console.log('blog isFocused() after click:' + await blog.isFocused());\r\n    await browser.pause(5000);\r\n\r\n\r\n})\r\n\r\n"],"mappings":"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"}},"mtime":1698696677872},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v5.webdriver.io/docs/api.html'); // ������� �� ��������\n  await browser.pause(2000);\n\n  //await apiButton.click()     // ������� �� ������ Api\n  //await browser.pause(2000);\n\n  //const currentUrl = await (browser.getUrl());\n  //console.log('Current Url is ' + await currentUrl);    // ����� � ������� https://v5.webdriver.io/docs/api.html\n\n  //const header = await $('.postHeaderTitle');\n  //console.log('Text is ' + await header.getText());    // ����� � ������� API Docs\n\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  //getAttribute\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v5.webdriver.io/docs/api.html'); //��� ����� �����\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.postHeaderTitle').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.postHeaderTitle');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('#footer [href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  const blog = $('[href=\"/blog/\"]');\n  console.log('blog isFocused() before click:' + input.isFocused());\n  await browser.pause(1000);\n  await blog.click();\n  console.log('blog isFocused() after click:' + input.isFocused());\n  await browser.pause(5000);\n\n  //const elem = $('#search_ nput_react');\n  //  elem.setValue('test is')      // ����� � ����� ���� 'test is'\n  //  await browser.pause(2000);\n\n  // let input = $('#search_input_react');\n  //   input.addValue(' DONE!')       // ���������� � ����� ���� 'DONE!'\n  //  await browser.pause(5000);     // ����� � ����� �� 5�.\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","input","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v5.webdriver.io/docs/api.html');     // ������� �� ��������\r\n    await browser.pause(2000);\r\n   \r\n    //await apiButton.click()     // ������� �� ������ Api\r\n    //await browser.pause(2000);\r\n\r\n    //const currentUrl = await (browser.getUrl());\r\n    //console.log('Current Url is ' + await currentUrl);    // ����� � ������� https://v5.webdriver.io/docs/api.html\r\n\r\n\r\n    //const header = await $('.postHeaderTitle');\r\n    //console.log('Text is ' + await header.getText());    // ����� � ������� API Docs\r\n\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    //getAttribute\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v5.webdriver.io/docs/api.html');          //��� ����� �����\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n    return $('.postHeaderTitle').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.postHeaderTitle');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('#footer [href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    const blog = $('[href=\"/blog/\"]');\r\n    console.log('blog isFocused() before click:' + input.isFocused());\r\n    await browser.pause(1000);\r\n    await blog.click();\r\n    console.log('blog isFocused() after click:' + input.isFocused());\r\n    await browser.pause(5000);\r\n\r\n    //const elem = $('#search_ nput_react');\r\n    //  elem.setValue('test is')      // ����� � ����� ���� 'test is'\r\n    //  await browser.pause(2000);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   // let input = $('#search_input_react');\r\n //   input.addValue(' DONE!')       // ���������� � ����� ���� 'DONE!'\r\n //  await browser.pause(5000);     // ����� � ����� �� 5�.\r\n})"],"mappings":"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"}},"mtime":1698090690733},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v7.webdriver.io/docs/api');\n  await browser.pause(2000);\n  //getAttribute\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v7.webdriver.io/docs/api');\n  await browser.pause(1000);\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.docTitle_Oumm').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.docTitle_Oumm');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter1.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //isFocused before click\n  const blog = await $('//div[@class=\"navbar__items\"]/a');\n  await browser.pause(1000);\n  console.log('blog isFocused() before click:' + (await blog.isFocused()));\n  await browser.pause(1000);\n  //isFocused after click\n  await blog.click();\n  await browser.pause(1000);\n  console.log('blog isFocused() after click:' + (await blog.isFocused()));\n  await browser.pause(2000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsImJyb3dzZXIiLCJ1cmwiLCJwYXVzZSIsIkpTT05XaXJlIiwiJCIsIm5ld3dpbmQiLCJnZXRBdHRyaWJ1dGUiLCJuZXdXaW5kb3ciLCJXaWtpQnV0dG9uIiwiaXNEaXNwbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwic3dpdGNoV2luZG93Iiwid2FpdFVudGlsIiwiZ2V0VGV4dCIsImVsZW0iLCJzYXZlU2NyZWVuc2hvdCIsIlR3aXR0ZXIiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJzY3JvbGwiLCJzY3JvbGxJbnRvVmlldyIsIlR3aXR0ZXIxIiwiaXNEaXNwbGF5ZWQxIiwiaXNEaXNwbGF5ZWRJblZpZXdwb3J0MSIsImJsb2ciLCJpc0ZvY3VzZWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxkZXNrdG9wXFx3b3JrMVxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaXQoJ0hvbWV3b3JrMScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgIC8vZ2V0QXR0cmlidXRlXHJcbiAgICBjb25zdCBKU09OV2lyZSA9IGF3YWl0ICQoJy8vKlt0ZXh0KCk9XCJKU09OV2lyZSBwcm90b2NvbFwiXScpO1xyXG4gICAgY29uc3QgbmV3d2luZCA9IGF3YWl0IEpTT05XaXJlLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgLy9uZXdXaW5kb3dcclxuICAgIGJyb3dzZXIubmV3V2luZG93KG5ld3dpbmQpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFdpa2lCdXR0b24gPSBhd2FpdCAkKCdbaHJlZj1cIi9TZWxlbml1bUhRL3NlbGVuaXVtL3dpa2lcIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgV2lraUJ1dHRvbi5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0lzIERpc3BsYXllZD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zd2l0Y2hXaW5kb3dcclxuICAgIGJyb3dzZXIuc3dpdGNoV2luZG93KCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vd2FpdFVudGlsXHJcbiAgICBicm93c2VyLndhaXRVbnRpbCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoJy5kb2NUaXRsZV9PdW1tJykuZ2V0VGV4dCgpO1xyXG4gICAgfSwgMjAwMCwgJ2Jsb2cgaXMgbm90IGRpYXBsYXllZCcpO1xyXG4gICAgLy9zYXZlU2NyZWVuc2hvdFxyXG4gICAgY29uc3QgZWxlbSA9ICQoJy5kb2NUaXRsZV9PdW1tJyk7XHJcbiAgICBlbGVtLnNhdmVTY3JlZW5zaG90KCdlbGVtU2NyZWVuc2hvdC5wbmcnKVxyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFR3aXR0ZXIgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgVHdpdHRlci5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRGlzcGxheWVkSW5WaWV3cG9ydFxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCA9IGF3YWl0ICQoJ1tocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS93ZWJkcml2ZXJpb1wiXScpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgaXMgZGlzcGxheWVkIGluIFZpZXdQb3J0PzogJyArIGF3YWl0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zY3JvbGxJbnRyb1ZpZXcoKVxyXG4gICAgY29uc3Qgc2Nyb2xsID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgYXdhaXQgc2Nyb2xsLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAvL2lzRGlzcGxheWVkIzFcclxuICAgIGNvbnN0IFR3aXR0ZXIxID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBpc0Rpc3BsYXllZDEgPSBhd2FpdCBUd2l0dGVyMS5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkMSk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9pc0Rpc3BsYXllZEluVmlld3BvcnQjMVxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydDEgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKS5pc0Rpc3BsYXllZEluVmlld3BvcnQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdUd2l0dGV0IGlzIGRpc3BsYXllZCBpbiBWaWV3UG9ydD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZEluVmlld3BvcnQxKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRm9jdXNlZCBiZWZvcmUgY2xpY2tcclxuICAgIGNvbnN0IGJsb2cgPSBhd2FpdCAkKCcvL2RpdltAY2xhc3M9XCJuYXZiYXJfX2l0ZW1zXCJdL2EnKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICBjb25zb2xlLmxvZygnYmxvZyBpc0ZvY3VzZWQoKSBiZWZvcmUgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNGb2N1c2VkIGFmdGVyIGNsaWNrXHJcbiAgICBhd2FpdCBibG9nLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ2Jsb2cgaXNGb2N1c2VkKCkgYWZ0ZXIgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWTtFQUN4QixNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQztFQUNyRCxNQUFNRCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0VBQzNELE1BQU1DLE9BQU8sR0FBRyxNQUFNRixRQUFRLENBQUNHLFlBQVksQ0FBQyxNQUFNLENBQUM7RUFDbkQ7RUFDQU4sT0FBTyxDQUFDTyxTQUFTLENBQUNGLE9BQU8sQ0FBQztFQUMxQixNQUFNTCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNTSxVQUFVLEdBQUcsTUFBTUosQ0FBQyxDQUFDLG9DQUFvQyxDQUFDO0VBQ2hFSyxXQUFXLEdBQUcsTUFBTUQsVUFBVSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUM1Q0Ms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","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work1\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(2000);\r\n    //getAttribute\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(1000);\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n        return $('.docTitle_Oumm').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.docTitle_Oumm');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter1.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //isFocused before click\r\n    const blog = await $('//div[@class=\"navbar__items\"]/a');\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() before click:' + await blog.isFocused());\r\n    await browser.pause(1000);\r\n    //isFocused after click\r\n    await blog.click();\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() after click:' + await blog.isFocused());\r\n    await browser.pause(2000);\r\n})\r\n\r\n"],"mappings":"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"}},"mtime":1698701705320},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work3\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work3\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v5.webdriver.io/docs/api.html');\n  await browser.pause(2000);\n  //Introduction_xpath\n  const Introduction = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[1]/h3');\n  console.log('xpath Introduction Is Displayed?: ' + (await Introduction.isDisplayed()));\n  await browser.pause(2000);\n  //Introduction_css\n  const Introduction1 = await $('.navListItem.navListItemActive');\n  console.log('css Introduction Is Displayed?: ' + (await Introduction1.isDisplayed()));\n  await browser.pause(2000);\n  //API_Docs_xpath\n  const API_Docs = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[1]/ul/li/a');\n  console.log('xpath API_Docs Is Displayed?: ' + (await API_Docs.isDisplayed()));\n  await browser.pause(2000);\n  //API_Docs_css\n  const API_Docs1 = await $(\"li.navListItem.navListItemActive > a.navItem\");\n  console.log('css API_Docs Is Displayed?: ' + (await API_Docs1.isDisplayed()));\n  await browser.pause(2000);\n  //Protocols_xpath\n  const Protocols = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/h3');\n  console.log('xpath Protocols Is Displayed?: ' + (await Protocols.isDisplayed()));\n  await browser.pause(2000);\n  //Protocols_css\n  const Protocols1 = await $(\"div.navGroup > h3.navGroupCategoryTitle\");\n  console.log('css Protocols Is Displayed?: ' + (await Protocols1.isDisplayed()));\n  await browser.pause(2000);\n  //Webdriver_Protocol_xpath\n  const Webdriver_Protocol = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[1]/a');\n  console.log('xpath Webdriver_Protocol Is Displayed?: ' + (await Webdriver_Protocol.isDisplayed()));\n  await browser.pause(2000);\n  //Webdriver_Protocol_css\n  const Webdriver_Protocol1 = await $('li a[href=\"/docs/api/webdriver.html\"]');\n  console.log('css Webdriver_Protocol Is Displayed?: ' + (await Webdriver_Protocol1.isDisplayed()));\n  await browser.pause(2000);\n  //Appium_xpath\n  const Appium = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[2]/a');\n  console.log('xpath Appium Is Displayed?: ' + (await Appium.isDisplayed()));\n  await browser.pause(2000);\n  //Appium_css\n  const Appium1 = await $('li a[href=\"/docs/api/appium.html\"]');\n  console.log('css Appium Is Displayed?: ' + (await Appium1.isDisplayed()));\n  await browser.pause(2000);\n  //JSON_Wire_Protocol_xpath\n  const JSON_Wire_Protocol = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[3]/a');\n  console.log('xpath JSON_Wire_Protocol Is Displayed?: ' + (await JSON_Wire_Protocol.isDisplayed()));\n  await browser.pause(2000);\n  //JSON_Wire_Protocol_css\n  const JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/jsonwp.html\"]');\n  console.log('css JSON_Wire_Protocol Is Displayed?: ' + (await JSON_Wire_Protocol1.isDisplayed()));\n  await browser.pause(2000);\n  //Mobile_JSON_Wire_Protocol_xpath\n  const Mobile_JSON_Wire_Protocol = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[4]/a');\n  console.log('xpath Mobile_JSON_Wire_Protocol Is Displayed?: ' + (await Mobile_JSON_Wire_Protocol.isDisplayed()));\n  await browser.pause(2000);\n  //Mobile_JSON_Wire_Protocol_css\n  const Mobile_JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/mjsonwp.html\"]');\n  console.log('css Mobile_JSON_Wire_Protocol Is Displayed?: ' + (await Mobile_JSON_Wire_Protocol1.isDisplayed()));\n  await browser.pause(2000);\n  //Chromium_xpath\n  const Chromium = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[5]/a');\n  console.log('xpath Chromium Is Displayed?: ' + (await Chromium.isDisplayed()));\n  await browser.pause(2000);\n  //Chromium_css\n  const Chromium1 = await $('li a[href=\"/docs/api/chromium.html\"]');\n  console.log('css Chromium Is Displayed?: ' + (await Chromium1.isDisplayed()));\n  await browser.pause(2000);\n  //Sauce_Labs_xpath\n  const Sauce_Labs = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[6]/a');\n  console.log('xpath Sauce_Labs Is Displayed?: ' + (await Sauce_Labs.isDisplayed()));\n  await browser.pause(2000);\n  //Sauce_Labs_css\n  const Sauce_Labs1 = await $('li a[href=\"/docs/api/saucelabs.html\"]');\n  console.log('css Sauce_Labs Is Displayed?: ' + (await Sauce_Labs1.isDisplayed()));\n  await browser.pause(2000);\n  //Selenium_Standalone_xpath\n  const Selenium_Standalone = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[7]/a');\n  console.log('xpath Selenium_Standalone Is Displayed?: ' + (await Selenium_Standalone.isDisplayed()));\n  await browser.pause(2000);\n  //Selenium_Standalone_css\n  const Selenium_Standalone1 = await $('li a[href=\"/docs/api/selenium.html\"]');\n  console.log('css Selenium_Standalone Is Displayed?: ' + (await Selenium_Standalone1.isDisplayed()));\n  await browser.pause(2000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["it","browser","url","pause","Introduction","$","console","log","isDisplayed","Introduction1","API_Docs","API_Docs1","Protocols","Protocols1","Webdriver_Protocol","Webdriver_Protocol1","Appium","Appium1","JSON_Wire_Protocol","JSON_Wire_Protocol1","Mobile_JSON_Wire_Protocol","Mobile_JSON_Wire_Protocol1","Chromium","Chromium1","Sauce_Labs","Sauce_Labs1","Selenium_Standalone","Selenium_Standalone1"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work3\\test\\specs\\","sources":["basic.js"],"sourcesContent":["    it('Homework1', async () => {\r\n    await browser.url('https://v5.webdriver.io/docs/api.html');\r\n    await browser.pause(2000);\r\n    //Introduction_xpath\r\n    const Introduction = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[1]/h3');\r\n        console.log('xpath Introduction Is Displayed?: ' + await Introduction.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Introduction_css\r\n    const Introduction1 = await $('.navListItem.navListItemActive');\r\n        console.log('css Introduction Is Displayed?: ' + await Introduction1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //API_Docs_xpath\r\n    const API_Docs = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[1]/ul/li/a');\r\n        console.log('xpath API_Docs Is Displayed?: ' + await API_Docs.isDisplayed());\r\n    await browser.pause(2000);\r\n    //API_Docs_css\r\n        const API_Docs1 = await $(\"li.navListItem.navListItemActive > a.navItem\");\r\n        console.log('css API_Docs Is Displayed?: ' + await API_Docs1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Protocols_xpath\r\n        const Protocols = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/h3');\r\n    console.log('xpath Protocols Is Displayed?: ' + await Protocols.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Protocols_css\r\n        const Protocols1 = await $(\"div.navGroup > h3.navGroupCategoryTitle\");\r\n        console.log('css Protocols Is Displayed?: ' + await Protocols1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Webdriver_Protocol_xpath\r\n        const Webdriver_Protocol = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[1]/a');\r\n        console.log('xpath Webdriver_Protocol Is Displayed?: ' + await Webdriver_Protocol.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Webdriver_Protocol_css\r\n        const Webdriver_Protocol1 = await $('li a[href=\"/docs/api/webdriver.html\"]');\r\n        console.log('css Webdriver_Protocol Is Displayed?: ' + await Webdriver_Protocol1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Appium_xpath\r\n        const Appium = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[2]/a');\r\n        console.log('xpath Appium Is Displayed?: ' + await Appium.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Appium_css\r\n        const Appium1 = await $('li a[href=\"/docs/api/appium.html\"]');\r\n        console.log('css Appium Is Displayed?: ' + await Appium1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //JSON_Wire_Protocol_xpath\r\n        const JSON_Wire_Protocol = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[3]/a');\r\n        console.log('xpath JSON_Wire_Protocol Is Displayed?: ' + await JSON_Wire_Protocol.isDisplayed());\r\n    await browser.pause(2000);\r\n    //JSON_Wire_Protocol_css\r\n        const JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/jsonwp.html\"]');\r\n        console.log('css JSON_Wire_Protocol Is Displayed?: ' + await JSON_Wire_Protocol1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Mobile_JSON_Wire_Protocol_xpath\r\n        const Mobile_JSON_Wire_Protocol = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[4]/a');\r\n        console.log('xpath Mobile_JSON_Wire_Protocol Is Displayed?: ' + await Mobile_JSON_Wire_Protocol.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Mobile_JSON_Wire_Protocol_css\r\n        const Mobile_JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/mjsonwp.html\"]');\r\n        console.log('css Mobile_JSON_Wire_Protocol Is Displayed?: ' + await Mobile_JSON_Wire_Protocol1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Chromium_xpath\r\n        const Chromium = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[5]/a');\r\n        console.log('xpath Chromium Is Displayed?: ' + await Chromium.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Chromium_css\r\n        const Chromium1 = await $('li a[href=\"/docs/api/chromium.html\"]');\r\n        console.log('css Chromium Is Displayed?: ' + await Chromium1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Sauce_Labs_xpath\r\n        const Sauce_Labs = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[6]/a');\r\n        console.log('xpath Sauce_Labs Is Displayed?: ' + await Sauce_Labs.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Sauce_Labs_css\r\n        const Sauce_Labs1 = await $('li a[href=\"/docs/api/saucelabs.html\"]');\r\n        console.log('css Sauce_Labs Is Displayed?: ' + await Sauce_Labs1.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Selenium_Standalone_xpath\r\n        const Selenium_Standalone = await $('//*[@id=\"docsNav\"]/nav/div/section/div[2]/div[2]/ul/li[7]/a');\r\n        console.log('xpath Selenium_Standalone Is Displayed?: ' + await Selenium_Standalone.isDisplayed());\r\n    await browser.pause(2000);\r\n    //Selenium_Standalone_css\r\n        const Selenium_Standalone1 = await $('li a[href=\"/docs/api/selenium.html\"]');\r\n        console.log('css Selenium_Standalone Is Displayed?: ' + await Selenium_Standalone1.isDisplayed());\r\n    await browser.pause(2000);\r\n})\r\n\r\n"],"mappings":"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"}},"mtime":1699995643948},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\desktop\\work3\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336490000},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work3\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework3', async () => {\n  await browser.url('https://v5.webdriver.io/docs/api.html');\n  await browser.pause(1000);\n  //Introduction_xpath\n  const Introduction = await $('//h3[text()=\"Introduction\"]');\n  console.log('xpath Introduction Is Displayed?: ' + (await Introduction.isDisplayed()));\n  await browser.pause(1000);\n  //Introduction_css\n  const Introduction1 = await $('.navListItem.navListItemActive');\n  console.log('css Introduction Is Displayed?: ' + (await Introduction1.isDisplayed()));\n  await browser.pause(1000);\n  //API_Docs_xpath\n  const API_Docs = await $('//h3[text()=\"API Docs\"]');\n  console.log('xpath API_Docs Is Displayed?: ' + (await API_Docs.isDisplayed()));\n  await browser.pause(1000);\n  //API_Docs_css\n  const API_Docs1 = await $(\"li.navListItem.navListItemActive > a.navItem\");\n  console.log('css API_Docs Is Displayed?: ' + (await API_Docs1.isDisplayed()));\n  await browser.pause(1000);\n  //Protocols_xpath\n  const Protocols = await $('//h3[text()=\"Protocols\"]');\n  console.log('xpath Protocols Is Displayed?: ' + (await Protocols.isDisplayed()));\n  await browser.pause(1000);\n  //Protocols_css\n  const Protocols1 = await $(\"div.navGroup > h3.navGroupCategoryTitle\");\n  console.log('css Protocols Is Displayed?: ' + (await Protocols1.isDisplayed()));\n  await browser.pause(1000);\n  //Webdriver_Protocol_xpath\n  const Webdriver_Protocol = await $('//h3[text()=\"Webdriver Protocol\"]');\n  console.log('xpath Webdriver_Protocol Is Displayed?: ' + (await Webdriver_Protocol.isDisplayed()));\n  await browser.pause(1000);\n  //Webdriver_Protocol_css\n  const Webdriver_Protocol1 = await $('li a[href=\"/docs/api/webdriver.html\"]');\n  console.log('css Webdriver_Protocol Is Displayed?: ' + (await Webdriver_Protocol1.isDisplayed()));\n  await browser.pause(1000);\n  //Appium_xpath\n  const Appium = await $('//h3[text()=\"Appium\"]');\n  console.log('xpath Appium Is Displayed?: ' + (await Appium.isDisplayed()));\n  await browser.pause(1000);\n  //Appium_css\n  const Appium1 = await $('li a[href=\"/docs/api/appium.html\"]');\n  console.log('css Appium Is Displayed?: ' + (await Appium1.isDisplayed()));\n  await browser.pause(1000);\n  //JSON_Wire_Protocol_xpath\n  const JSON_Wire_Protocol = await $('//h3[text()=\"JSON Wire Protocol\"]');\n  console.log('xpath JSON_Wire_Protocol Is Displayed?: ' + (await JSON_Wire_Protocol.isDisplayed()));\n  await browser.pause(1000);\n  //JSON_Wire_Protocol_css\n  const JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/jsonwp.html\"]');\n  console.log('css JSON_Wire_Protocol Is Displayed?: ' + (await JSON_Wire_Protocol1.isDisplayed()));\n  await browser.pause(1000);\n  //Mobile_JSON_Wire_Protocol_xpath\n  const Mobile_JSON_Wire_Protocol = await $('//h3[text()=\"Mobile JSON Wire Protocol\"]');\n  console.log('xpath Mobile_JSON_Wire_Protocol Is Displayed?: ' + (await Mobile_JSON_Wire_Protocol.isDisplayed()));\n  await browser.pause(1000);\n  //Mobile_JSON_Wire_Protocol_css\n  const Mobile_JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/mjsonwp.html\"]');\n  console.log('css Mobile_JSON_Wire_Protocol Is Displayed?: ' + (await Mobile_JSON_Wire_Protocol1.isDisplayed()));\n  await browser.pause(1000);\n  //Chromium_xpath\n  const Chromium = await $('//h3[text()=\"Chromium\"]');\n  console.log('xpath Chromium Is Displayed?: ' + (await Chromium.isDisplayed()));\n  await browser.pause(1000);\n  //Chromium_css\n  const Chromium1 = await $('li a[href=\"/docs/api/chromium.html\"]');\n  console.log('css Chromium Is Displayed?: ' + (await Chromium1.isDisplayed()));\n  await browser.pause(1000);\n  //Sauce_Labs_xpath\n  const Sauce_Labs = await $('//h3[text()=\"Sauce_Labs\"]');\n  console.log('xpath Sauce_Labs Is Displayed?: ' + (await Sauce_Labs.isDisplayed()));\n  await browser.pause(1000);\n  //Sauce_Labs_css\n  const Sauce_Labs1 = await $('li a[href=\"/docs/api/saucelabs.html\"]');\n  console.log('css Sauce_Labs Is Displayed?: ' + (await Sauce_Labs1.isDisplayed()));\n  await browser.pause(1000);\n  //Selenium_Standalone_xpath\n  const Selenium_Standalone = await $('//h3[text()=\"Selenium_Standalone\"]');\n  console.log('xpath Selenium_Standalone Is Displayed?: ' + (await Selenium_Standalone.isDisplayed()));\n  await browser.pause(1000);\n  //Selenium_Standalone_css\n  const Selenium_Standalone1 = await $('li a[href=\"/docs/api/selenium.html\"]');\n  console.log('css Selenium_Standalone Is Displayed?: ' + (await Selenium_Standalone1.isDisplayed()));\n  await browser.pause(1000);\n  //AppiumIO_xpath\n  const AppiumIO = await $('//h3[text()=\"AppiumIO\"]');\n  console.log('xpath AppiumIO Is Displayed?: ' + (await AppiumIO.isDisplayed()));\n  await browser.pause(1000);\n  //AppiumIO_css\n  const AppiumIO1 = await $(' a[href=\"http://appium.io\"]');\n  console.log('css AppiumIO Is Displayed?: ' + (await AppiumIO1.isDisplayed()));\n  await browser.pause(1000);\n  //v4.webdriver.io_xpath\n  const webdriverio = await $('//h3[text()=\"v4.webdriver.io\"]');\n  console.log('xpath webdriverio Is Displayed?: ' + (await webdriverio.isDisplayed()));\n  await browser.pause(1000);\n  //v4.webdriver.io_css\n  const webdriverio1 = await $(' a[href=\"http://v4.webdriver.io\"]');\n  console.log('css webdriverio Is Displayed?: ' + (await webdriverio1.isDisplayed()));\n  await browser.pause(1000);\n  //contribute_xpath\n  const contribute = await $('//h3[text()=\"contribute\"]');\n  console.log('xpath contribute Is Displayed?: ' + (await contribute.isDisplayed()));\n  await browser.pause(1000);\n  //contribute_css\n  const contribute1 = await $('li a[href=\"#contribute\"]');\n  console.log('css contribute Is Displayed?: ' + (await contribute1.isDisplayed()));\n  await browser.pause(1000);\n  //Docs_xpath\n  const Docs = await $('//h3[text()=\"Docs\"]');\n  console.log('xpath Docs Is Displayed?: ' + (await Docs.isDisplayed()));\n  await browser.pause(1000);\n  //Docs_css\n  const Docs1 = await $('//*[text()=\"Docs\"]');\n  console.log('css Docs Is Displayed?: ' + (await Docs1.isDisplayed()));\n  await browser.pause(1000);\n  //Getting_Started_xpath\n  const Getting_Started = await $('//h3[text()=\"Getting Started\"]');\n  console.log('xpath Getting_Started Is Displayed?: ' + (await Getting_Started.isDisplayed()));\n  await browser.pause(1000);\n  //Getting_Started_css\n  const Getting_Started1 = await $('a a[href=\"/docs/gettingstarted.html\"]');\n  console.log('css Getting_Started Is Displayed?: ' + (await Getting_Started1.isDisplayed()));\n  await browser.pause(1000);\n  //API_Reference_xpath\n  const API_Reference = await $('//h3[text()=\"API Reference\"]');\n  console.log('xpath API_Reference Is Displayed?: ' + (await API_Reference.isDisplayed()));\n  await browser.pause(1000);\n  //API_Reference_css\n  const API_Reference1 = await $('a a[href=\"/docs/api.html\"]');\n  console.log('css API_Reference Is Displayed?: ' + (await API_Reference1.isDisplayed()));\n  await browser.pause(1000);\n  //Help_xpath\n  const Help = await $('//h3[text()=\"Help\"]');\n  console.log('xpath Help Is Displayed?: ' + (await Help.isDisplayed()));\n  await browser.pause(1000);\n  //Help_css\n  const Help1 = await $('a a[href=\"/help.html\"]');\n  console.log('css Help Is Displayed?: ' + (await Help1.isDisplayed()));\n  await browser.pause(1000);\n  //Community_xpath\n  const Community = await $('//h3[text()=\"Community\"]');\n  console.log('xpath Community Is Displayed?: ' + (await Community.isDisplayed()));\n  await browser.pause(1000);\n  //Community_css\n  const Community1 = await $('//*[text()=\"Community\"]');\n  console.log('css Community Is Displayed?: ' + (await Community1.isDisplayed()));\n  await browser.pause(1000);\n  //Stack_Overflow_xpath\n  const Stack_Overflow = await $('//h3[text()=\"Stack Overflow\"]');\n  console.log('xpath Stack_Overflow Is Displayed?: ' + (await Stack_Overflow.isDisplayed()));\n  await browser.pause(1000);\n  //Stack_Overflow_css\n  const Stack_Overflow1 = await $('a a[href=\"https://stackoverflow.com/questions/tagged/webdriver-io\"]');\n  console.log('css Stack_Overflow Is Displayed?: ' + (await Stack_Overflow1.isDisplayed()));\n  await browser.pause(1000);\n  //Support_Chat_xpath\n  const Support_Chat = await $('//h3[text()=\"Support Chat\"]');\n  console.log('xpath Support_Chat Is Displayed?: ' + (await Support_Chat.isDisplayed()));\n  await browser.pause(1000);\n  //Support_Chat_css\n  const Support_Chat1 = await $('a a[href=\"https://gitter.im/webdriverio/webdriverio\"]');\n  console.log('css Support_Chat Is Displayed?: ' + (await Support_Chat1.isDisplayed()));\n  await browser.pause(1000);\n  //Twitter_xpath\n  const Twitter = await $('//h3[text()=\"Twitter\"]');\n  console.log('xpath Twitter Is Displayed?: ' + (await Twitter.isDisplayed()));\n  await browser.pause(1000);\n  //Twitter_css\n  const Twitter1 = await $('a a[href=\"https://twitter.com/webdriverio\"]');\n  console.log('css Twitter Is Displayed?: ' + (await Twitter1.isDisplayed()));\n  await browser.pause(1000);\n  //More_xpath\n  const More = await $('//h3[text()=\"More\"]');\n  console.log('xpath More Is Displayed?: ' + (await More.isDisplayed()));\n  await browser.pause(1000);\n  //More_css\n  const More1 = await $('//*[text()=\"More\"]');\n  console.log('css More Is Displayed?: ' + (await More1.isDisplayed()));\n  await browser.pause(1000);\n  //Blog_xpath\n  const Blog = await $('//h3[text()=\"Blog\"]');\n  console.log('xpath Blog Is Displayed?: ' + (await Blog.isDisplayed()));\n  await browser.pause(1000);\n  //Blog_css\n  const Blog1 = await $('a a[href=\"/blog\"]');\n  console.log('css Blog Is Displayed?: ' + (await Blog1.isDisplayed()));\n  await browser.pause(1000);\n  //GitHub_xpath\n  const GitHub = await $('//h3[text()=\"GitHub\"]');\n  console.log('xpath GitHub Is Displayed?: ' + (await GitHub.isDisplayed()));\n  await browser.pause(1000);\n  //GitHub_css\n  const GitHub1 = await $('a a[href=\"https://github.com/webdriverio/webdriverio\"]');\n  console.log('css GitHub Is Displayed?: ' + (await GitHub1.isDisplayed()));\n  await browser.pause(1000);\n  //widget_xpath\n  const widget = await $('//*[@id=\"footer\"]/section[1]/div[3]/span//div');\n  console.log('xpath widget Is Displayed?: ' + (await widget.isDisplayed()));\n  await browser.pause(1000);\n  //widget_css\n  const widget1 = await $('//*[@id=\"footer\"]/section[1]/div[3]/span');\n  console.log('css widget Is Displayed?: ' + (await widget1.isDisplayed()));\n  await browser.pause(1000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["it","browser","url","pause","Introduction","$","console","log","isDisplayed","Introduction1","API_Docs","API_Docs1","Protocols","Protocols1","Webdriver_Protocol","Webdriver_Protocol1","Appium","Appium1","JSON_Wire_Protocol","JSON_Wire_Protocol1","Mobile_JSON_Wire_Protocol","Mobile_JSON_Wire_Protocol1","Chromium","Chromium1","Sauce_Labs","Sauce_Labs1","Selenium_Standalone","Selenium_Standalone1","AppiumIO","AppiumIO1","webdriverio","webdriverio1","contribute","contribute1","Docs","Docs1","Getting_Started","Getting_Started1","API_Reference","API_Reference1","Help","Help1","Community","Community1","Stack_Overflow","Stack_Overflow1","Support_Chat","Support_Chat1","Twitter","Twitter1","More","More1","Blog","Blog1","GitHub","GitHub1","widget","widget1"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\desktop\\work3\\test\\specs\\","sources":["basic.js"],"sourcesContent":["    it('Homework3', async () => {\r\n    await browser.url('https://v5.webdriver.io/docs/api.html');\r\n    await browser.pause(1000);\r\n    //Introduction_xpath\r\n        const Introduction = await $('//h3[text()=\"Introduction\"]');\r\n      console.log('xpath Introduction Is Displayed?: ' + await Introduction.isDisplayed());\r\n       await browser.pause(1000);\r\n    //Introduction_css\r\n    const Introduction1 = await $('.navListItem.navListItemActive');\r\n      console.log('css Introduction Is Displayed?: ' + await Introduction1.isDisplayed());\r\n       await browser.pause(1000);\r\n    //API_Docs_xpath\r\n        const API_Docs = await $('//h3[text()=\"API Docs\"]');\r\n      console.log('xpath API_Docs Is Displayed?: ' + await API_Docs.isDisplayed());\r\n       await browser.pause(1000);\r\n    //API_Docs_css\r\n      const API_Docs1 = await $(\"li.navListItem.navListItemActive > a.navItem\");\r\n        console.log('css API_Docs Is Displayed?: ' + await API_Docs1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Protocols_xpath\r\n        const Protocols = await $('//h3[text()=\"Protocols\"]');\r\n        console.log('xpath Protocols Is Displayed?: ' + await Protocols.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Protocols_css\r\n      const Protocols1 = await $(\"div.navGroup > h3.navGroupCategoryTitle\");\r\n        console.log('css Protocols Is Displayed?: ' + await Protocols1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Webdriver_Protocol_xpath\r\n        const Webdriver_Protocol = await $('//h3[text()=\"Webdriver Protocol\"]');\r\n        console.log('xpath Webdriver_Protocol Is Displayed?: ' + await Webdriver_Protocol.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Webdriver_Protocol_css\r\n      const Webdriver_Protocol1 = await $('li a[href=\"/docs/api/webdriver.html\"]');\r\n        console.log('css Webdriver_Protocol Is Displayed?: ' + await Webdriver_Protocol1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Appium_xpath\r\n        const Appium = await $('//h3[text()=\"Appium\"]');\r\n        console.log('xpath Appium Is Displayed?: ' + await Appium.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Appium_css\r\n      const Appium1 = await $('li a[href=\"/docs/api/appium.html\"]');\r\n        console.log('css Appium Is Displayed?: ' + await Appium1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //JSON_Wire_Protocol_xpath\r\n        const JSON_Wire_Protocol = await $('//h3[text()=\"JSON Wire Protocol\"]');\r\n        console.log('xpath JSON_Wire_Protocol Is Displayed?: ' + await JSON_Wire_Protocol.isDisplayed());\r\n         await browser.pause(1000);\r\n    //JSON_Wire_Protocol_css\r\n      const JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/jsonwp.html\"]');\r\n        console.log('css JSON_Wire_Protocol Is Displayed?: ' + await JSON_Wire_Protocol1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Mobile_JSON_Wire_Protocol_xpath\r\n        const Mobile_JSON_Wire_Protocol = await $('//h3[text()=\"Mobile JSON Wire Protocol\"]');\r\n        console.log('xpath Mobile_JSON_Wire_Protocol Is Displayed?: ' + await Mobile_JSON_Wire_Protocol.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Mobile_JSON_Wire_Protocol_css\r\n      const Mobile_JSON_Wire_Protocol1 = await $('li a[href=\"/docs/api/mjsonwp.html\"]');\r\n        console.log('css Mobile_JSON_Wire_Protocol Is Displayed?: ' + await Mobile_JSON_Wire_Protocol1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Chromium_xpath\r\n        const Chromium = await $('//h3[text()=\"Chromium\"]');\r\n        console.log('xpath Chromium Is Displayed?: ' + await Chromium.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Chromium_css\r\n      const Chromium1 = await $('li a[href=\"/docs/api/chromium.html\"]');\r\n        console.log('css Chromium Is Displayed?: ' + await Chromium1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Sauce_Labs_xpath\r\n        const Sauce_Labs = await $('//h3[text()=\"Sauce_Labs\"]');\r\n        console.log('xpath Sauce_Labs Is Displayed?: ' + await Sauce_Labs.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Sauce_Labs_css\r\n      const Sauce_Labs1 = await $('li a[href=\"/docs/api/saucelabs.html\"]');\r\n        console.log('css Sauce_Labs Is Displayed?: ' + await Sauce_Labs1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Selenium_Standalone_xpath\r\n        const Selenium_Standalone = await $('//h3[text()=\"Selenium_Standalone\"]');\r\n        console.log('xpath Selenium_Standalone Is Displayed?: ' + await Selenium_Standalone.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Selenium_Standalone_css\r\n      const Selenium_Standalone1 = await $('li a[href=\"/docs/api/selenium.html\"]');\r\n        console.log('css Selenium_Standalone Is Displayed?: ' + await Selenium_Standalone1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //AppiumIO_xpath\r\n        const AppiumIO = await $('//h3[text()=\"AppiumIO\"]');\r\n        console.log('xpath AppiumIO Is Displayed?: ' + await AppiumIO.isDisplayed());\r\n         await browser.pause(1000);\r\n    //AppiumIO_css\r\n      const AppiumIO1 = await $(' a[href=\"http://appium.io\"]');\r\n        console.log('css AppiumIO Is Displayed?: ' + await AppiumIO1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //v4.webdriver.io_xpath\r\n        const webdriverio = await $('//h3[text()=\"v4.webdriver.io\"]');\r\n        console.log('xpath webdriverio Is Displayed?: ' + await webdriverio.isDisplayed());\r\n         await browser.pause(1000);\r\n    //v4.webdriver.io_css\r\n      const webdriverio1 = await $(' a[href=\"http://v4.webdriver.io\"]');\r\n        console.log('css webdriverio Is Displayed?: ' + await webdriverio1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //contribute_xpath\r\n        const contribute = await $('//h3[text()=\"contribute\"]');\r\n        console.log('xpath contribute Is Displayed?: ' + await contribute.isDisplayed());\r\n         await browser.pause(1000);\r\n    //contribute_css\r\n      const contribute1 = await $('li a[href=\"#contribute\"]');\r\n        console.log('css contribute Is Displayed?: ' + await contribute1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Docs_xpath\r\n      const Docs = await $('//h3[text()=\"Docs\"]');\r\n        console.log('xpath Docs Is Displayed?: ' + await Docs.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Docs_css\r\n      const Docs1 = await $('//*[text()=\"Docs\"]');\r\n        console.log('css Docs Is Displayed?: ' + await Docs1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Getting_Started_xpath\r\n        const Getting_Started = await $('//h3[text()=\"Getting Started\"]');\r\n        console.log('xpath Getting_Started Is Displayed?: ' + await Getting_Started.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Getting_Started_css\r\n      const Getting_Started1 = await $('a a[href=\"/docs/gettingstarted.html\"]');\r\n        console.log('css Getting_Started Is Displayed?: ' + await Getting_Started1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //API_Reference_xpath\r\n        const API_Reference = await $('//h3[text()=\"API Reference\"]');\r\n        console.log('xpath API_Reference Is Displayed?: ' + await API_Reference.isDisplayed());\r\n         await browser.pause(1000);   \r\n    //API_Reference_css\r\n      const API_Reference1 = await $('a a[href=\"/docs/api.html\"]');\r\n        console.log('css API_Reference Is Displayed?: ' + await API_Reference1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Help_xpath\r\n        const Help = await $('//h3[text()=\"Help\"]');\r\n        console.log('xpath Help Is Displayed?: ' + await Help.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Help_css\r\n      const Help1 = await $('a a[href=\"/help.html\"]');\r\n        console.log('css Help Is Displayed?: ' + await Help1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Community_xpath\r\n        const Community = await $('//h3[text()=\"Community\"]');\r\n        console.log('xpath Community Is Displayed?: ' + await Community.isDisplayed());\r\n          await browser.pause(1000);\r\n    //Community_css\r\n      const Community1 = await $('//*[text()=\"Community\"]');\r\n        console.log('css Community Is Displayed?: ' + await Community1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Stack_Overflow_xpath\r\n        const Stack_Overflow = await $('//h3[text()=\"Stack Overflow\"]');\r\n        console.log('xpath Stack_Overflow Is Displayed?: ' + await Stack_Overflow.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Stack_Overflow_css\r\n      const Stack_Overflow1 = await $('a a[href=\"https://stackoverflow.com/questions/tagged/webdriver-io\"]');\r\n        console.log('css Stack_Overflow Is Displayed?: ' + await Stack_Overflow1.isDisplayed());\r\n        await browser.pause(1000);\r\n    //Support_Chat_xpath\r\n        const Support_Chat = await $('//h3[text()=\"Support Chat\"]');\r\n        console.log('xpath Support_Chat Is Displayed?: ' + await Support_Chat.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Support_Chat_css\r\n      const Support_Chat1 = await $('a a[href=\"https://gitter.im/webdriverio/webdriverio\"]');\r\n        console.log('css Support_Chat Is Displayed?: ' + await Support_Chat1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Twitter_xpath\r\n        const Twitter = await $('//h3[text()=\"Twitter\"]');\r\n        console.log('xpath Twitter Is Displayed?: ' + await Twitter.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Twitter_css\r\n      const Twitter1 = await $('a a[href=\"https://twitter.com/webdriverio\"]');\r\n        console.log('css Twitter Is Displayed?: ' + await Twitter1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //More_xpath\r\n        const More = await $('//h3[text()=\"More\"]');\r\n        console.log('xpath More Is Displayed?: ' + await More.isDisplayed());\r\n         await browser.pause(1000);\r\n    //More_css\r\n      const More1 = await $('//*[text()=\"More\"]');\r\n        console.log('css More Is Displayed?: ' + await More1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Blog_xpath\r\n        const Blog = await $('//h3[text()=\"Blog\"]');\r\n        console.log('xpath Blog Is Displayed?: ' + await Blog.isDisplayed());\r\n         await browser.pause(1000);\r\n    //Blog_css\r\n      const Blog1 = await $('a a[href=\"/blog\"]');\r\n        console.log('css Blog Is Displayed?: ' + await Blog1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //GitHub_xpath\r\n        const GitHub = await $('//h3[text()=\"GitHub\"]');\r\n        console.log('xpath GitHub Is Displayed?: ' + await GitHub.isDisplayed());\r\n         await browser.pause(1000);\r\n    //GitHub_css\r\n      const GitHub1 = await $('a a[href=\"https://github.com/webdriverio/webdriverio\"]');\r\n        console.log('css GitHub Is Displayed?: ' + await GitHub1.isDisplayed());\r\n         await browser.pause(1000);\r\n    //widget_xpath\r\n      const widget = await $('//*[@id=\"footer\"]/section[1]/div[3]/span//div');\r\n        console.log('xpath widget Is Displayed?: ' + await widget.isDisplayed());\r\n         await browser.pause(1000);\r\n    //widget_css\r\n        const widget1 = await $('//*[@id=\"footer\"]/section[1]/div[3]/span');\r\n        console.log('css widget Is Displayed?: ' + await widget1.isDisplayed());\r\n         await browser.pause(1000);\r\n})    \r\n\r\n"],"mappings":"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"}},"mtime":1700833667665},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\desktop\\work4\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336490000},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework4, (5)�onfirming that text fields are visible on screen', async () => {\n  await browser.url('https://webdriver.io/');\n  await browser.pause(1000);\n  //������� �� ������ \"Menu\"\n  const search = await $('//*[@id=\"__docusaurus\"]/nav/div[1]/div[1]/button');\n  await search.click();\n  await browser.pause(1000);\n  //await search.setValue('');\n  const v8 = await $('//*[@id=\"__docusaurus\"]/nav/div[3]/div[2]/div[1]/ul/li[7]/a');\n  await v8.click();\n  await browser.pause(1000);\n  //newWindow\n  const v5 = await $('[href=\"https://v5.webdriver.io\"]');\n  const newwind = await v5.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //������� �� Guide\n  const Guide = await $('[href=\"/docs/gettingstarted.html\"]');\n  await Guide.click();\n  await browser.pause(1000);\n  //�������� ������ ����\n  const hamburgerMenu = await $('.hamburger-menu');\n  await hamburgerMenu.click();\n  await browser.pause(1000);\n  //������� �� typeScript Setup\n  const typeScript = await $('[href=\"/docs/typescript.html\"]');\n  await typeScript.click();\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #1\n  let isDisplayedInViewport1 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[1]').isDisplayedInViewport();\n  console.log('The minimum TypeScript version is 3.5.1. is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #2\n  let isDisplayedInViewport2 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[2]').isDisplayedInViewport();\n  console.log('Similarly for Mocha is displayed in ViewPort?: ' + (await isDisplayedInViewport2));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #3\n  let isDisplayedInViewport3 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[3]').isDisplayedInViewport();\n  console.log('And Cucumber is displayed in ViewPort?: ' + (await isDisplayedInViewport3));\n  await browser.pause(1000);\n  //������ �������� �� �������� #4\n  const forElement4 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/p[5]/code');\n  await forElement4.scrollIntoView();\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #4\n  let isDisplayedInViewport4 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[4]').isDisplayedInViewport();\n  console.log('And your tsconfig.json needs the following is displayed in ViewPort?: ' + (await isDisplayedInViewport4));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #5\n  let isDisplayedInViewport5 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[5]').isDisplayedInViewport();\n  console.log('For sync mode (@wdio/sync), webdriverio types must be replaced with @wdio/sync is displayed in ViewPort?: ' + (await isDisplayedInViewport5));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #6\n  let isDisplayedInViewport6 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[6]').isDisplayedInViewport();\n  console.log('Typed Configuration is displayed in ViewPort?: ' + (await isDisplayedInViewport6));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #7\n  let isDisplayedInViewport7 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[7]').isDisplayedInViewport();\n  console.log('And in your typed configuration file is displayed in ViewPort?: ' + (await isDisplayedInViewport7));\n  await browser.pause(1000);\n  //������ �������� �� �������� #7\n  const forElement8 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[7]');\n  await forElement8.scrollIntoView();\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #8\n  let isDisplayedInViewport8 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[8]').isDisplayedInViewport();\n  console.log('Framework types is displayed in ViewPort?: ' + (await isDisplayedInViewport8));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #9\n  let isDisplayedInViewport9 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[9]').isDisplayedInViewport();\n  console.log('also import only the types is displayed in ViewPort?: ' + (await isDisplayedInViewport9));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #10\n  let isDisplayedInViewport10 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[10]').isDisplayedInViewport();\n  console.log('Add types to your custom commands like this is displayed in ViewPort?: ' + (await isDisplayedInViewport10));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #11\n  let isDisplayedInViewport11 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[11]').isDisplayedInViewport();\n  console.log('Sync mode is displayed in ViewPort?: ' + (await isDisplayedInViewport11));\n  await browser.pause(1000);\n  //����� �� �� ������ ���� � ������� #12\n  let isDisplayedInViewport12 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[12]').isDisplayedInViewport();\n  console.log('Async mode is displayed in ViewPort?: ' + (await isDisplayedInViewport12));\n  await browser.pause(3000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["it","browser","url","pause","search","$","click","v8","v5","newwind","getAttribute","newWindow","Guide","hamburgerMenu","typeScript","isDisplayedInViewport1","isDisplayedInViewport","console","log","isDisplayedInViewport2","isDisplayedInViewport3","forElement4","scrollIntoView","isDisplayedInViewport4","isDisplayedInViewport5","isDisplayedInViewport6","isDisplayedInViewport7","forElement8","isDisplayedInViewport8","isDisplayedInViewport9","isDisplayedInViewport10","isDisplayedInViewport11","isDisplayedInViewport12"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\desktop\\work4\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework4, (5)�onfirming that text fields are visible on screen', async () => {\r\n    await browser.url('https://webdriver.io/');\r\n    await browser.pause(1000);\r\n    //������� �� ������ \"Menu\"\r\n    const search = await $('//*[@id=\"__docusaurus\"]/nav/div[1]/div[1]/button');\r\n    await search.click();\r\n    await browser.pause(1000); \r\n    //await search.setValue('');\r\n    const v8 = await $('//*[@id=\"__docusaurus\"]/nav/div[3]/div[2]/div[1]/ul/li[7]/a')\r\n    await v8.click();\r\n    await browser.pause(1000);\r\n    //newWindow\r\n    const v5 = await $('[href=\"https://v5.webdriver.io\"]');\r\n    const newwind = await v5.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //������� �� Guide\r\n    const Guide = await $('[href=\"/docs/gettingstarted.html\"]');\r\n    await Guide.click();\r\n    await browser.pause(1000);\r\n    //�������� ������ ����\r\n    const hamburgerMenu = await $('.hamburger-menu');\r\n    await hamburgerMenu.click();\r\n    await browser.pause(1000);\r\n    //������� �� typeScript Setup\r\n    const typeScript = await $('[href=\"/docs/typescript.html\"]');\r\n    await typeScript.click();\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #1\r\n    let isDisplayedInViewport1 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[1]').isDisplayedInViewport();\r\n    console.log('The minimum TypeScript version is 3.5.1. is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #2\r\n    let isDisplayedInViewport2 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[2]').isDisplayedInViewport();\r\n    console.log('Similarly for Mocha is displayed in ViewPort?: ' + await isDisplayedInViewport2);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #3\r\n    let isDisplayedInViewport3 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[3]').isDisplayedInViewport();\r\n    console.log('And Cucumber is displayed in ViewPort?: ' + await isDisplayedInViewport3);\r\n    await browser.pause(1000);\r\n    //������ �������� �� �������� #4\r\n    const forElement4 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/p[5]/code');\r\n    await forElement4.scrollIntoView();\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #4\r\n    let isDisplayedInViewport4 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[4]').isDisplayedInViewport();\r\n    console.log('And your tsconfig.json needs the following is displayed in ViewPort?: ' + await isDisplayedInViewport4);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #5\r\n    let isDisplayedInViewport5 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[5]').isDisplayedInViewport();\r\n    console.log('For sync mode (@wdio/sync), webdriverio types must be replaced with @wdio/sync is displayed in ViewPort?: ' + await isDisplayedInViewport5);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #6\r\n    let isDisplayedInViewport6 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[6]').isDisplayedInViewport();\r\n    console.log('Typed Configuration is displayed in ViewPort?: ' + await isDisplayedInViewport6);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #7\r\n    let isDisplayedInViewport7 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[7]').isDisplayedInViewport();\r\n    console.log('And in your typed configuration file is displayed in ViewPort?: ' + await isDisplayedInViewport7);\r\n    await browser.pause(1000);\r\n    //������ �������� �� �������� #7\r\n    const forElement8 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[7]');\r\n    await forElement8.scrollIntoView();\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #8\r\n    let isDisplayedInViewport8 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[8]').isDisplayedInViewport();\r\n    console.log('Framework types is displayed in ViewPort?: ' + await isDisplayedInViewport8);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #9\r\n    let isDisplayedInViewport9 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[9]').isDisplayedInViewport();\r\n    console.log('also import only the types is displayed in ViewPort?: ' + await isDisplayedInViewport9);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #10\r\n    let isDisplayedInViewport10 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[10]').isDisplayedInViewport();\r\n    console.log('Add types to your custom commands like this is displayed in ViewPort?: ' + await isDisplayedInViewport10);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #11\r\n    let isDisplayedInViewport11 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[11]').isDisplayedInViewport();\r\n    console.log('Sync mode is displayed in ViewPort?: ' + await isDisplayedInViewport11);\r\n    await browser.pause(1000);\r\n    //����� �� �� ������ ���� � ������� #12\r\n    let isDisplayedInViewport12 = await $('/html/body/div[2]/div/div[2]/div/div[1]/article/div/span/pre[12]').isDisplayedInViewport();\r\n    console.log('Async mode is displayed in ViewPort?: ' + await isDisplayedInViewport12);\r\n    await browser.pause(3000); \r\n})    \r\n\r\n    "],"mappings":"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"}},"mtime":1706712282763},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336490000},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const assert = require('assert');\nconst apiPage = require('../page/api.page.js');\nconst contributePage = require('../page/contribute.page.js');\nconst helpPage = require('../page/help.page.js');\nconst browseDocs = require('../page/isdisplayed.page.js');\ndescribe('webdriver.io page', async () => {\n  it('should demonstrate the addValue command', async () => {\n    await browser.url('https://v6.webdriver.io/');\n    apiPage.clickApiButton();\n    await browser.pause(2000);\n\n    // mainPage.searchInput.addValue('test');\n    // await browser.pause(2000);\n    // mainPage.setUserName(' type with method');      \n    // await browser.pause(2000);\n  });\n  it('should click contribute button', async () => {\n    contributePage.clickContributeButton();\n    await browser.pause(2000);\n  });\n  it('should click Help button', async () => {\n    helpPage.clickHelpButton();\n    await browser.pause(2000);\n  });\n  it('is displayed \"View documents\"?', async () => {\n    browseDocs.browseDocsIsDisplayed();\n    await browser.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiYXBpUGFnZSIsImNvbnRyaWJ1dGVQYWdlIiwiaGVscFBhZ2UiLCJicm93c2VEb2NzIiwiZGVzY3JpYmUiLCJpdCIsImJyb3dzZXIiLCJ1cmwiLCJjbGlja0FwaUJ1dHRvbiIsInBhdXNlIiwiY2xpY2tDb250cmlidXRlQnV0dG9uIiwiY2xpY2tIZWxwQnV0dG9uIiwiYnJvd3NlRG9jc0lzRGlzcGxheWVkIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExldmNoZW5rb19PbGVrc2lpXFxEZXNrdG9wXFx3b3JrNFxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0JylcclxuY29uc3QgYXBpUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2UvYXBpLnBhZ2UuanMnKTtcclxuY29uc3QgY29udHJpYnV0ZVBhZ2UgPSByZXF1aXJlKCcuLi9wYWdlL2NvbnRyaWJ1dGUucGFnZS5qcycpXHJcbmNvbnN0IGhlbHBQYWdlID0gcmVxdWlyZSgnLi4vcGFnZS9oZWxwLnBhZ2UuanMnKVxyXG5jb25zdCBicm93c2VEb2NzID0gcmVxdWlyZSgnLi4vcGFnZS9pc2Rpc3BsYXllZC5wYWdlLmpzJylcclxuZGVzY3JpYmUoJ3dlYmRyaXZlci5pbyBwYWdlJywgYXN5bmMgKCkgPT4ge1xyXG5cclxuICAgIGl0KCdzaG91bGQgZGVtb25zdHJhdGUgdGhlIGFkZFZhbHVlIGNvbW1hbmQnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci51cmwoJ2h0dHBzOi8vdjYud2ViZHJpdmVyLmlvLycpO1xyXG4gICAgICAgIGFwaVBhZ2UuY2xpY2tBcGlCdXR0b24oKTtcclxuICAgICAgICBhd2FpdCBicm93c2VyLnBhdXNlKDIwMDApO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAvLyBtYWluUGFnZS5zZWFyY2hJbnB1dC5hZGRWYWx1ZSgndGVzdCcpO1xyXG4gICAgICAgIC8vIGF3YWl0IGJyb3dzZXIucGF1c2UoMjAwMCk7XHJcbiAgICAgICAgLy8gbWFpblBhZ2Uuc2V0VXNlck5hbWUoJyB0eXBlIHdpdGggbWV0aG9kJyk7ICAgICAgXHJcbiAgICAgICAgLy8gYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgICAgICBcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ3Nob3VsZCBjbGljayBjb250cmlidXRlIGJ1dHRvbicsIGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb250cmlidXRlUGFnZS5jbGlja0NvbnRyaWJ1dGVCdXR0b24oKTtcclxuICAgICAgICBhd2FpdCBicm93c2VyLnBhdXNlKDIwMDApO1xyXG4gICAgICAgIFxyXG4gICAgICAgIH0pXHJcblxyXG5cclxuICAgIGl0KCdzaG91bGQgY2xpY2sgSGVscCBidXR0b24nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgIGhlbHBQYWdlLmNsaWNrSGVscEJ1dHRvbigpO1xyXG4gICAgICAgICBhd2FpdCBicm93c2VyLnBhdXNlKDIwMDApO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9KVxyXG5cclxuICAgIGl0KCdpcyBkaXNwbGF5ZWQgXCJWaWV3IGRvY3VtZW50c1wiPycsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgYnJvd3NlRG9jcy5icm93c2VEb2NzSXNEaXNwbGF5ZWQoKTtcclxuICAgICAgICAgICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgIH0pICAgIFxyXG5cclxuXHJcbn0pIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDaEMsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFDOUMsTUFBTUUsY0FBYyxHQUFHRixPQUFPLENBQUMsNEJBQTRCLENBQUM7QUFDNUQsTUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsc0JBQXNCLENBQUM7QUFDaEQsTUFBTUksVUFBVSxHQUFHSixPQUFPLENBQUMsNkJBQTZCLENBQUM7QUFDekRLLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxZQUFZO0VBRXRDQyxFQUFFLENBQUMseUNBQXlDLEVBQUUsWUFBWTtJQUN0RCxNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztJQUM3Q1AsT0FBTyxDQUFDUSxjQUFjLENBQUMsQ0FBQztJQUN4QixNQUFNRixPQUFPLENBQUNHLEtBQUssQ0FBQyxJQUFJLENBQUM7O0lBRXpCO0lBQ0E7SUFDQTtJQUNBO0VBRUosQ0FBQyxDQUFDO0VBRUZKLEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxZQUFZO0lBQzdDSixjQUFjLENBQUNTLHFCQUFxQixDQUFDLENBQUM7SUFDdEMsTUFBTUosT0FBTyxDQUFDRyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBRXpCLENBQUMsQ0FBQztFQUdOSixFQUFFLENBQUMsMEJBQTBCLEVBQUUsWUFBWTtJQUN0Q0gsUUFBUSxDQUFDUyxlQUFlLENBQUMsQ0FBQztJQUMxQixNQUFNTCxPQUFPLENBQUNHLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFFMUIsQ0FBQyxDQUFDO0VBRU5KLEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxZQUFZO0lBQ3pDRixVQUFVLENBQUNTLHFCQUFxQixDQUFDLENBQUM7SUFDbEMsTUFBTU4sT0FBTyxDQUFDRyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBRzdCLENBQUMsQ0FBQztBQUdWLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["assert","require","apiPage","contributePage","helpPage","browseDocs","describe","it","browser","url","clickApiButton","pause","clickContributeButton","clickHelpButton","browseDocsIsDisplayed"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\test\\specs\\","sources":["basic.js"],"sourcesContent":["const assert = require('assert')\r\nconst apiPage = require('../page/api.page.js');\r\nconst contributePage = require('../page/contribute.page.js')\r\nconst helpPage = require('../page/help.page.js')\r\nconst browseDocs = require('../page/isdisplayed.page.js')\r\ndescribe('webdriver.io page', async () => {\r\n\r\n    it('should demonstrate the addValue command', async () => {\r\n        await browser.url('https://v6.webdriver.io/');\r\n        apiPage.clickApiButton();\r\n        await browser.pause(2000);\r\n            \r\n        // mainPage.searchInput.addValue('test');\r\n        // await browser.pause(2000);\r\n        // mainPage.setUserName(' type with method');      \r\n        // await browser.pause(2000);\r\n        \r\n    })\r\n\r\n    it('should click contribute button', async () => {\r\n        contributePage.clickContributeButton();\r\n        await browser.pause(2000);\r\n        \r\n        })\r\n\r\n\r\n    it('should click Help button', async () => {\r\n         helpPage.clickHelpButton();\r\n         await browser.pause(2000);\r\n            \r\n        })\r\n\r\n    it('is displayed \"View documents\"?', async () => {\r\n            browseDocs.browseDocsIsDisplayed();\r\n            await browser.pause(2000);\r\n               \r\n\r\n        })    \r\n\r\n\r\n})"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,MAAME,cAAc,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAC5D,MAAMG,QAAQ,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAMI,UAAU,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AACzDK,QAAQ,CAAC,mBAAmB,EAAE,YAAY;EAEtCC,EAAE,CAAC,yCAAyC,EAAE,YAAY;IACtD,MAAMC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC7CP,OAAO,CAACQ,cAAc,CAAC,CAAC;IACxB,MAAMF,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;;IAEzB;IACA;IACA;IACA;EAEJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,gCAAgC,EAAE,YAAY;IAC7CJ,cAAc,CAACS,qBAAqB,CAAC,CAAC;IACtC,MAAMJ,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;EAEzB,CAAC,CAAC;EAGNJ,EAAE,CAAC,0BAA0B,EAAE,YAAY;IACtCH,QAAQ,CAACS,eAAe,CAAC,CAAC;IAC1B,MAAML,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;EAE1B,CAAC,CAAC;EAENJ,EAAE,CAAC,gCAAgC,EAAE,YAAY;IACzCF,UAAU,CAACS,qBAAqB,CAAC,CAAC;IAClC,MAAMN,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;EAG7B,CAAC,CAAC;AAGV,CAAC,CAAC"}},"mtime":1708346659343},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\main.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class MainPage {\n  get searchInput() {\n    return $('#search_input_react');\n  }\n  setUserName(value) {\n    this.searchInput.addValue(value);\n  }\n}\nmodule.exports = new MainPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNYWluUGFnZSIsInNlYXJjaElucHV0IiwiJCIsInNldFVzZXJOYW1lIiwidmFsdWUiLCJhZGRWYWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTGV2Y2hlbmtvX09sZWtzaWlcXERlc2t0b3BcXHdvcms0XFx0ZXN0XFxwYWdlXFwiLCJzb3VyY2VzIjpbIm1haW4ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBNYWluUGFnZSB7XHJcblxyXG4gICAgZ2V0IHNlYXJjaElucHV0KCkge1xyXG4gICAgICAgIHJldHVybiAkKCcjc2VhcmNoX2lucHV0X3JlYWN0JylcclxuICAgICAgICB9XHJcbiAgICBzZXRVc2VyTmFtZSAodmFsdWUpIHtcclxuICAgICAgICB0aGlzLnNlYXJjaElucHV0LmFkZFZhbHVlKHZhbHVlKTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgTWFpblBhZ2UoKSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxDQUFDO0VBRVgsSUFBSUMsV0FBV0EsQ0FBQSxFQUFHO0lBQ2QsT0FBT0MsQ0FBQyxDQUFDLHFCQUFxQixDQUFDO0VBQy9CO0VBQ0pDLFdBQVdBLENBQUVDLEtBQUssRUFBRTtJQUNoQixJQUFJLENBQUNILFdBQVcsQ0FBQ0ksUUFBUSxDQUFDRCxLQUFLLENBQUM7RUFDcEM7QUFDSjtBQUVBRSxNQUFNLENBQUNDLE9BQU8sR0FBRyxJQUFJUCxRQUFRLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["MainPage","searchInput","$","setUserName","value","addValue","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\test\\page\\","sources":["main.page.js"],"sourcesContent":["class MainPage {\r\n\r\n    get searchInput() {\r\n        return $('#search_input_react')\r\n        }\r\n    setUserName (value) {\r\n        this.searchInput.addValue(value);\r\n    }\r\n}\r\n\r\nmodule.exports = new MainPage()"],"mappings":"AAAA,MAAMA,QAAQ,CAAC;EAEX,IAAIC,WAAWA,CAAA,EAAG;IACd,OAAOC,CAAC,CAAC,qBAAqB,CAAC;EAC/B;EACJC,WAAWA,CAAEC,KAAK,EAAE;IAChB,IAAI,CAACH,WAAW,CAACI,QAAQ,CAACD,KAAK,CAAC;EACpC;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAG,IAAIP,QAAQ,CAAC,CAAC"}},"mtime":1707916856464},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\api.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class apiPage {\n  get apiButton() {\n    return $('[href=\"/docs/api.html\"]');\n  }\n  clickApiButton() {\n    this.apiButton.click();\n  }\n}\nmodule.exports = new apiPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcGlQYWdlIiwiYXBpQnV0dG9uIiwiJCIsImNsaWNrQXBpQnV0dG9uIiwiY2xpY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExldmNoZW5rb19PbGVrc2lpXFxEZXNrdG9wXFx3b3JrNFxcdGVzdFxccGFnZVxcIiwic291cmNlcyI6WyJhcGkucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBhcGlQYWdlIHtcclxuXHJcbiAgICBnZXQgYXBpQnV0dG9uKCkge1xyXG4gICAgICAgIHJldHVybiAkKCdbaHJlZj1cIi9kb2NzL2FwaS5odG1sXCJdJylcclxuICAgICAgICB9XHJcbiAgICAgICAgY2xpY2tBcGlCdXR0b24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmFwaUJ1dHRvbi5jbGljaygpO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBhcGlQYWdlKCkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sQ0FBQztFQUVWLElBQUlDLFNBQVNBLENBQUEsRUFBRztJQUNaLE9BQU9DLENBQUMsQ0FBQyx5QkFBeUIsQ0FBQztFQUNuQztFQUNBQyxjQUFjQSxDQUFBLEVBQUk7SUFDZCxJQUFJLENBQUNGLFNBQVMsQ0FBQ0csS0FBSyxDQUFDLENBQUM7RUFDOUI7QUFDSjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxJQUFJTixPQUFPLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["apiPage","apiButton","$","clickApiButton","click","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\test\\page\\","sources":["api.page.js"],"sourcesContent":["class apiPage {\r\n\r\n    get apiButton() {\r\n        return $('[href=\"/docs/api.html\"]')\r\n        }\r\n        clickApiButton () {\r\n            this.apiButton.click();\r\n    }\r\n}\r\n\r\nmodule.exports = new apiPage()"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EAEV,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAOC,CAAC,CAAC,yBAAyB,CAAC;EACnC;EACAC,cAAcA,CAAA,EAAI;IACd,IAAI,CAACF,SAAS,CAACG,KAAK,CAAC,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC"}},"mtime":1707923328164},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\contribute.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class contributePage {\n  get contributePage() {\n    return $('[href=\"/docs/contribute.html\"]');\n  }\n  clickContributeButton() {\n    this.contributePage.click();\n  }\n}\nmodule.exports = new contributePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb250cmlidXRlUGFnZSIsIiQiLCJjbGlja0NvbnRyaWJ1dGVCdXR0b24iLCJjbGljayIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTGV2Y2hlbmtvX09sZWtzaWlcXERlc2t0b3BcXHdvcms0XFx0ZXN0XFxwYWdlXFwiLCJzb3VyY2VzIjpbImNvbnRyaWJ1dGUucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBjb250cmlidXRlUGFnZSB7XHJcblxyXG4gICAgZ2V0IGNvbnRyaWJ1dGVQYWdlKCkge1xyXG4gICAgICAgIHJldHVybiAkKCdbaHJlZj1cIi9kb2NzL2NvbnRyaWJ1dGUuaHRtbFwiXScpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsaWNrQ29udHJpYnV0ZUJ1dHRvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udHJpYnV0ZVBhZ2UuY2xpY2soKTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgY29udHJpYnV0ZVBhZ2UoKSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsY0FBYyxDQUFDO0VBRWpCLElBQUlBLGNBQWNBLENBQUEsRUFBRztJQUNqQixPQUFPQyxDQUFDLENBQUMsZ0NBQWdDLENBQUM7RUFDMUM7RUFDQUMscUJBQXFCQSxDQUFBLEVBQUk7SUFDckIsSUFBSSxDQUFDRixjQUFjLENBQUNHLEtBQUssQ0FBQyxDQUFDO0VBQ25DO0FBQ0o7QUFFQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsSUFBSUwsY0FBYyxDQUFDLENBQUMifQ==","map":{"version":3,"names":["contributePage","$","clickContributeButton","click","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\test\\page\\","sources":["contribute.page.js"],"sourcesContent":["class contributePage {\r\n\r\n    get contributePage() {\r\n        return $('[href=\"/docs/contribute.html\"]')\r\n        }\r\n        clickContributeButton () {\r\n            this.contributePage.click();\r\n    }\r\n}\r\n\r\nmodule.exports = new contributePage()"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EAEjB,IAAIA,cAAcA,CAAA,EAAG;IACjB,OAAOC,CAAC,CAAC,gCAAgC,CAAC;EAC1C;EACAC,qBAAqBA,CAAA,EAAI;IACrB,IAAI,CAACF,cAAc,CAACG,KAAK,CAAC,CAAC;EACnC;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIL,cAAc,CAAC,CAAC"}},"mtime":1707923439671},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\help.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class helpPage {\n  get helpButton() {\n    return $('[href=\"/help.html\"]');\n  }\n  clickHelpButton() {\n    this.helpButton.click();\n  }\n}\nmodule.exports = new helpPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJoZWxwUGFnZSIsImhlbHBCdXR0b24iLCIkIiwiY2xpY2tIZWxwQnV0dG9uIiwiY2xpY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExldmNoZW5rb19PbGVrc2lpXFxEZXNrdG9wXFx3b3JrNFxcdGVzdFxccGFnZVxcIiwic291cmNlcyI6WyJoZWxwLnBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgaGVscFBhZ2Uge1xyXG5cclxuICAgIGdldCBoZWxwQnV0dG9uKCkge1xyXG4gICAgICAgIHJldHVybiAkKCdbaHJlZj1cIi9oZWxwLmh0bWxcIl0nKVxyXG4gICAgICAgIH1cclxuICAgICAgICBjbGlja0hlbHBCdXR0b24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmhlbHBCdXR0b24uY2xpY2soKTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgaGVscFBhZ2UoKSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxDQUFDO0VBRVgsSUFBSUMsVUFBVUEsQ0FBQSxFQUFHO0lBQ2IsT0FBT0MsQ0FBQyxDQUFDLHFCQUFxQixDQUFDO0VBQy9CO0VBQ0FDLGVBQWVBLENBQUEsRUFBSTtJQUNmLElBQUksQ0FBQ0YsVUFBVSxDQUFDRyxLQUFLLENBQUMsQ0FBQztFQUMvQjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlOLFFBQVEsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["helpPage","helpButton","$","clickHelpButton","click","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\test\\page\\","sources":["help.page.js"],"sourcesContent":["class helpPage {\r\n\r\n    get helpButton() {\r\n        return $('[href=\"/help.html\"]')\r\n        }\r\n        clickHelpButton () {\r\n            this.helpButton.click();\r\n    }\r\n}\r\n\r\nmodule.exports = new helpPage()"],"mappings":"AAAA,MAAMA,QAAQ,CAAC;EAEX,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAOC,CAAC,CAAC,qBAAqB,CAAC;EAC/B;EACAC,eAAeA,CAAA,EAAI;IACf,IAAI,CAACF,UAAU,CAACG,KAAK,CAAC,CAAC;EAC/B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIN,QAAQ,CAAC,CAAC"}},"mtime":1707923363376},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\\\\test\\\\page\\\\isdisplayed.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\work4\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class browseDocs {\n  get DocsIsDisplayed() {\n    return $('//*[text()=\"Browse Docs\"]');\n  }\n  browseDocsIsDisplayed() {\n    this.DocsIsDisplayed.isDisplayed();\n    console.log();\n  }\n}\nmodule.exports = new browseDocs();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VEb2NzIiwiRG9jc0lzRGlzcGxheWVkIiwiJCIsImJyb3dzZURvY3NJc0Rpc3BsYXllZCIsImlzRGlzcGxheWVkIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTGV2Y2hlbmtvX09sZWtzaWlcXERlc2t0b3BcXHdvcms0XFx0ZXN0XFxwYWdlXFwiLCJzb3VyY2VzIjpbImlzZGlzcGxheWVkLnBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgYnJvd3NlRG9jcyB7XHJcblxyXG4gICAgZ2V0IERvY3NJc0Rpc3BsYXllZCgpIHtcclxuICAgICAgICByZXR1cm4gJCgnLy8qW3RleHQoKT1cIkJyb3dzZSBEb2NzXCJdJylcclxuICAgICAgICB9XHJcbiAgICAgICAgYnJvd3NlRG9jc0lzRGlzcGxheWVkICgpIHtcclxuICAgICAgICAgICAgdGhpcy5Eb2NzSXNEaXNwbGF5ZWQuaXNEaXNwbGF5ZWQoKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coKTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgYnJvd3NlRG9jcygpIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLENBQUM7RUFFYixJQUFJQyxlQUFlQSxDQUFBLEVBQUc7SUFDbEIsT0FBT0MsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO0VBQ3JDO0VBQ0FDLHFCQUFxQkEsQ0FBQSxFQUFJO0lBQ3JCLElBQUksQ0FBQ0YsZUFBZSxDQUFDRyxXQUFXLENBQUMsQ0FBQztJQUNsQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQztFQUNyQjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlSLFVBQVUsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["browseDocs","DocsIsDisplayed","$","browseDocsIsDisplayed","isDisplayed","console","log","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\work4\\test\\page\\","sources":["isdisplayed.page.js"],"sourcesContent":["class browseDocs {\r\n\r\n    get DocsIsDisplayed() {\r\n        return $('//*[text()=\"Browse Docs\"]')\r\n        }\r\n        browseDocsIsDisplayed () {\r\n            this.DocsIsDisplayed.isDisplayed();\r\n            console.log();\r\n    }\r\n}\r\n\r\nmodule.exports = new browseDocs()"],"mappings":"AAAA,MAAMA,UAAU,CAAC;EAEb,IAAIC,eAAeA,CAAA,EAAG;IAClB,OAAOC,CAAC,CAAC,2BAA2B,CAAC;EACrC;EACAC,qBAAqBA,CAAA,EAAI;IACrB,IAAI,CAACF,eAAe,CAACG,WAAW,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,CAAC;EACrB;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIR,UAAU,CAAC,CAAC"}},"mtime":1707925492258},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\FinalProject\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336490000},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const assert = require('assert');\nconst apiPage = require('../page/api.page.js');\nconst contributePage = require('../page/contribute.page.js');\nconst helpPage = require('../page/help.page.js');\nconst browseDocs = require('../page/isdisplayed.page.js');\ndescribe('webdriver.io page', async () => {\n  it('should demonstrate the addValue command', async () => {\n    await browser.url('https://v6.webdriver.io/');\n    apiPage.clickApiButton();\n    await browser.pause(2000);\n\n    // mainPage.searchInput.addValue('test');\n    // await browser.pause(2000);\n    // mainPage.setUserName(' type with method');      \n    // await browser.pause(2000);\n  });\n  it('should click contribute button', async () => {\n    contributePage.clickContributeButton();\n    await browser.pause(2000);\n  });\n  it('should click Help button', async () => {\n    helpPage.clickHelpButton();\n    await browser.pause(2000);\n  });\n  it('is displayed \"View documents\"?', async () => {\n    browseDocs.browseDocsIsDisplayed();\n    await browser.pause(2000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiYXBpUGFnZSIsImNvbnRyaWJ1dGVQYWdlIiwiaGVscFBhZ2UiLCJicm93c2VEb2NzIiwiZGVzY3JpYmUiLCJpdCIsImJyb3dzZXIiLCJ1cmwiLCJjbGlja0FwaUJ1dHRvbiIsInBhdXNlIiwiY2xpY2tDb250cmlidXRlQnV0dG9uIiwiY2xpY2tIZWxwQnV0dG9uIiwiYnJvd3NlRG9jc0lzRGlzcGxheWVkIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExldmNoZW5rb19PbGVrc2lpXFxEZXNrdG9wXFxGaW5hbFByb2plY3RcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbImJhc2ljLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpXHJcbmNvbnN0IGFwaVBhZ2UgPSByZXF1aXJlKCcuLi9wYWdlL2FwaS5wYWdlLmpzJyk7XHJcbmNvbnN0IGNvbnRyaWJ1dGVQYWdlID0gcmVxdWlyZSgnLi4vcGFnZS9jb250cmlidXRlLnBhZ2UuanMnKVxyXG5jb25zdCBoZWxwUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2UvaGVscC5wYWdlLmpzJylcclxuY29uc3QgYnJvd3NlRG9jcyA9IHJlcXVpcmUoJy4uL3BhZ2UvaXNkaXNwbGF5ZWQucGFnZS5qcycpXHJcbmRlc2NyaWJlKCd3ZWJkcml2ZXIuaW8gcGFnZScsIGFzeW5jICgpID0+IHtcclxuXHJcbiAgICBpdCgnc2hvdWxkIGRlbW9uc3RyYXRlIHRoZSBhZGRWYWx1ZSBjb21tYW5kJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y2LndlYmRyaXZlci5pby8nKTtcclxuICAgICAgICBhcGlQYWdlLmNsaWNrQXBpQnV0dG9uKCk7XHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgLy8gbWFpblBhZ2Uuc2VhcmNoSW5wdXQuYWRkVmFsdWUoJ3Rlc3QnKTtcclxuICAgICAgICAvLyBhd2FpdCBicm93c2VyLnBhdXNlKDIwMDApO1xyXG4gICAgICAgIC8vIG1haW5QYWdlLnNldFVzZXJOYW1lKCcgdHlwZSB3aXRoIG1ldGhvZCcpOyAgICAgIFxyXG4gICAgICAgIC8vIGF3YWl0IGJyb3dzZXIucGF1c2UoMjAwMCk7XHJcbiAgICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdzaG91bGQgY2xpY2sgY29udHJpYnV0ZSBidXR0b24nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29udHJpYnV0ZVBhZ2UuY2xpY2tDb250cmlidXRlQnV0dG9uKCk7XHJcbiAgICAgICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgICAgICBcclxuICAgICAgICB9KVxyXG5cclxuXHJcbiAgICBpdCgnc2hvdWxkIGNsaWNrIEhlbHAgYnV0dG9uJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICBoZWxwUGFnZS5jbGlja0hlbHBCdXR0b24oKTtcclxuICAgICAgICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICBpdCgnaXMgZGlzcGxheWVkIFwiVmlldyBkb2N1bWVudHNcIj8nLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIGJyb3dzZURvY3MuYnJvd3NlRG9jc0lzRGlzcGxheWVkKCk7XHJcbiAgICAgICAgICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMjAwMCk7XHJcbiAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICB9KSAgICBcclxuXHJcblxyXG59KSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLHFCQUFxQixDQUFDO0FBQzlDLE1BQU1FLGNBQWMsR0FBR0YsT0FBTyxDQUFDLDRCQUE0QixDQUFDO0FBQzVELE1BQU1HLFFBQVEsR0FBR0gsT0FBTyxDQUFDLHNCQUFzQixDQUFDO0FBQ2hELE1BQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLDZCQUE2QixDQUFDO0FBQ3pESyxRQUFRLENBQUMsbUJBQW1CLEVBQUUsWUFBWTtFQUV0Q0MsRUFBRSxDQUFDLHlDQUF5QyxFQUFFLFlBQVk7SUFDdEQsTUFBTUMsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCLENBQUM7SUFDN0NQLE9BQU8sQ0FBQ1EsY0FBYyxDQUFDLENBQUM7SUFDeEIsTUFBTUYsT0FBTyxDQUFDRyxLQUFLLENBQUMsSUFBSSxDQUFDOztJQUV6QjtJQUNBO0lBQ0E7SUFDQTtFQUVKLENBQUMsQ0FBQztFQUVGSixFQUFFLENBQUMsZ0NBQWdDLEVBQUUsWUFBWTtJQUM3Q0osY0FBYyxDQUFDUyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ3RDLE1BQU1KLE9BQU8sQ0FBQ0csS0FBSyxDQUFDLElBQUksQ0FBQztFQUV6QixDQUFDLENBQUM7RUFHTkosRUFBRSxDQUFDLDBCQUEwQixFQUFFLFlBQVk7SUFDdENILFFBQVEsQ0FBQ1MsZUFBZSxDQUFDLENBQUM7SUFDMUIsTUFBTUwsT0FBTyxDQUFDRyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBRTFCLENBQUMsQ0FBQztFQUVOSixFQUFFLENBQUMsZ0NBQWdDLEVBQUUsWUFBWTtJQUN6Q0YsVUFBVSxDQUFDUyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ2xDLE1BQU1OLE9BQU8sQ0FBQ0csS0FBSyxDQUFDLElBQUksQ0FBQztFQUc3QixDQUFDLENBQUM7QUFHVixDQUFDLENBQUMifQ==","map":{"version":3,"names":["assert","require","apiPage","contributePage","helpPage","browseDocs","describe","it","browser","url","clickApiButton","pause","clickContributeButton","clickHelpButton","browseDocsIsDisplayed"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\FinalProject\\test\\specs\\","sources":["basic.js"],"sourcesContent":["const assert = require('assert')\r\nconst apiPage = require('../page/api.page.js');\r\nconst contributePage = require('../page/contribute.page.js')\r\nconst helpPage = require('../page/help.page.js')\r\nconst browseDocs = require('../page/isdisplayed.page.js')\r\ndescribe('webdriver.io page', async () => {\r\n\r\n    it('should demonstrate the addValue command', async () => {\r\n        await browser.url('https://v6.webdriver.io/');\r\n        apiPage.clickApiButton();\r\n        await browser.pause(2000);\r\n            \r\n        // mainPage.searchInput.addValue('test');\r\n        // await browser.pause(2000);\r\n        // mainPage.setUserName(' type with method');      \r\n        // await browser.pause(2000);\r\n        \r\n    })\r\n\r\n    it('should click contribute button', async () => {\r\n        contributePage.clickContributeButton();\r\n        await browser.pause(2000);\r\n        \r\n        })\r\n\r\n\r\n    it('should click Help button', async () => {\r\n         helpPage.clickHelpButton();\r\n         await browser.pause(2000);\r\n            \r\n        })\r\n\r\n    it('is displayed \"View documents\"?', async () => {\r\n            browseDocs.browseDocsIsDisplayed();\r\n            await browser.pause(2000);\r\n               \r\n\r\n        })    \r\n\r\n\r\n})"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC9C,MAAME,cAAc,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAC5D,MAAMG,QAAQ,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAMI,UAAU,GAAGJ,OAAO,CAAC,6BAA6B,CAAC;AACzDK,QAAQ,CAAC,mBAAmB,EAAE,YAAY;EAEtCC,EAAE,CAAC,yCAAyC,EAAE,YAAY;IACtD,MAAMC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC7CP,OAAO,CAACQ,cAAc,CAAC,CAAC;IACxB,MAAMF,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;;IAEzB;IACA;IACA;IACA;EAEJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,gCAAgC,EAAE,YAAY;IAC7CJ,cAAc,CAACS,qBAAqB,CAAC,CAAC;IACtC,MAAMJ,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;EAEzB,CAAC,CAAC;EAGNJ,EAAE,CAAC,0BAA0B,EAAE,YAAY;IACtCH,QAAQ,CAACS,eAAe,CAAC,CAAC;IAC1B,MAAML,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;EAE1B,CAAC,CAAC;EAENJ,EAAE,CAAC,gCAAgC,EAAE,YAAY;IACzCF,UAAU,CAACS,qBAAqB,CAAC,CAAC;IAClC,MAAMN,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;EAG7B,CAAC,CAAC;AAGV,CAAC,CAAC"}},"mtime":1708346659343},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\api.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class apiPage {\n  get apiButton() {\n    return $('[href=\"/docs/api.html\"]');\n  }\n  clickApiButton() {\n    this.apiButton.click();\n  }\n}\nmodule.exports = new apiPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcGlQYWdlIiwiYXBpQnV0dG9uIiwiJCIsImNsaWNrQXBpQnV0dG9uIiwiY2xpY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExldmNoZW5rb19PbGVrc2lpXFxEZXNrdG9wXFxGaW5hbFByb2plY3RcXHRlc3RcXHBhZ2VcXCIsInNvdXJjZXMiOlsiYXBpLnBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgYXBpUGFnZSB7XHJcblxyXG4gICAgZ2V0IGFwaUJ1dHRvbigpIHtcclxuICAgICAgICByZXR1cm4gJCgnW2hyZWY9XCIvZG9jcy9hcGkuaHRtbFwiXScpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNsaWNrQXBpQnV0dG9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5hcGlCdXR0b24uY2xpY2soKTtcclxuICAgIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgYXBpUGFnZSgpIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLENBQUM7RUFFVixJQUFJQyxTQUFTQSxDQUFBLEVBQUc7SUFDWixPQUFPQyxDQUFDLENBQUMseUJBQXlCLENBQUM7RUFDbkM7RUFDQUMsY0FBY0EsQ0FBQSxFQUFJO0lBQ2QsSUFBSSxDQUFDRixTQUFTLENBQUNHLEtBQUssQ0FBQyxDQUFDO0VBQzlCO0FBQ0o7QUFFQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsSUFBSU4sT0FBTyxDQUFDLENBQUMifQ==","map":{"version":3,"names":["apiPage","apiButton","$","clickApiButton","click","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\FinalProject\\test\\page\\","sources":["api.page.js"],"sourcesContent":["class apiPage {\r\n\r\n    get apiButton() {\r\n        return $('[href=\"/docs/api.html\"]')\r\n        }\r\n        clickApiButton () {\r\n            this.apiButton.click();\r\n    }\r\n}\r\n\r\nmodule.exports = new apiPage()"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EAEV,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAOC,CAAC,CAAC,yBAAyB,CAAC;EACnC;EACAC,cAAcA,CAAA,EAAI;IACd,IAAI,CAACF,SAAS,CAACG,KAAK,CAAC,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC"}},"mtime":1707923328164},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\contribute.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class contributePage {\n  get contributePage() {\n    return $('[href=\"/docs/contribute.html\"]');\n  }\n  clickContributeButton() {\n    this.contributePage.click();\n  }\n}\nmodule.exports = new contributePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb250cmlidXRlUGFnZSIsIiQiLCJjbGlja0NvbnRyaWJ1dGVCdXR0b24iLCJjbGljayIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTGV2Y2hlbmtvX09sZWtzaWlcXERlc2t0b3BcXEZpbmFsUHJvamVjdFxcdGVzdFxccGFnZVxcIiwic291cmNlcyI6WyJjb250cmlidXRlLnBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgY29udHJpYnV0ZVBhZ2Uge1xyXG5cclxuICAgIGdldCBjb250cmlidXRlUGFnZSgpIHtcclxuICAgICAgICByZXR1cm4gJCgnW2hyZWY9XCIvZG9jcy9jb250cmlidXRlLmh0bWxcIl0nKVxyXG4gICAgICAgIH1cclxuICAgICAgICBjbGlja0NvbnRyaWJ1dGVCdXR0b24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRyaWJ1dGVQYWdlLmNsaWNrKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IGNvbnRyaWJ1dGVQYWdlKCkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLGNBQWMsQ0FBQztFQUVqQixJQUFJQSxjQUFjQSxDQUFBLEVBQUc7SUFDakIsT0FBT0MsQ0FBQyxDQUFDLGdDQUFnQyxDQUFDO0VBQzFDO0VBQ0FDLHFCQUFxQkEsQ0FBQSxFQUFJO0lBQ3JCLElBQUksQ0FBQ0YsY0FBYyxDQUFDRyxLQUFLLENBQUMsQ0FBQztFQUNuQztBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlMLGNBQWMsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["contributePage","$","clickContributeButton","click","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\FinalProject\\test\\page\\","sources":["contribute.page.js"],"sourcesContent":["class contributePage {\r\n\r\n    get contributePage() {\r\n        return $('[href=\"/docs/contribute.html\"]')\r\n        }\r\n        clickContributeButton () {\r\n            this.contributePage.click();\r\n    }\r\n}\r\n\r\nmodule.exports = new contributePage()"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EAEjB,IAAIA,cAAcA,CAAA,EAAG;IACjB,OAAOC,CAAC,CAAC,gCAAgC,CAAC;EAC1C;EACAC,qBAAqBA,CAAA,EAAI;IACrB,IAAI,CAACF,cAAc,CAACG,KAAK,CAAC,CAAC;EACnC;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIL,cAAc,CAAC,CAAC"}},"mtime":1707923439671},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\help.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class helpPage {\n  get helpButton() {\n    return $('[href=\"/help.html\"]');\n  }\n  clickHelpButton() {\n    this.helpButton.click();\n  }\n}\nmodule.exports = new helpPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJoZWxwUGFnZSIsImhlbHBCdXR0b24iLCIkIiwiY2xpY2tIZWxwQnV0dG9uIiwiY2xpY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXExldmNoZW5rb19PbGVrc2lpXFxEZXNrdG9wXFxGaW5hbFByb2plY3RcXHRlc3RcXHBhZ2VcXCIsInNvdXJjZXMiOlsiaGVscC5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGhlbHBQYWdlIHtcclxuXHJcbiAgICBnZXQgaGVscEJ1dHRvbigpIHtcclxuICAgICAgICByZXR1cm4gJCgnW2hyZWY9XCIvaGVscC5odG1sXCJdJylcclxuICAgICAgICB9XHJcbiAgICAgICAgY2xpY2tIZWxwQnV0dG9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWxwQnV0dG9uLmNsaWNrKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IGhlbHBQYWdlKCkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsQ0FBQztFQUVYLElBQUlDLFVBQVVBLENBQUEsRUFBRztJQUNiLE9BQU9DLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQztFQUMvQjtFQUNBQyxlQUFlQSxDQUFBLEVBQUk7SUFDZixJQUFJLENBQUNGLFVBQVUsQ0FBQ0csS0FBSyxDQUFDLENBQUM7RUFDL0I7QUFDSjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxJQUFJTixRQUFRLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["helpPage","helpButton","$","clickHelpButton","click","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\FinalProject\\test\\page\\","sources":["help.page.js"],"sourcesContent":["class helpPage {\r\n\r\n    get helpButton() {\r\n        return $('[href=\"/help.html\"]')\r\n        }\r\n        clickHelpButton () {\r\n            this.helpButton.click();\r\n    }\r\n}\r\n\r\nmodule.exports = new helpPage()"],"mappings":"AAAA,MAAMA,QAAQ,CAAC;EAEX,IAAIC,UAAUA,CAAA,EAAG;IACb,OAAOC,CAAC,CAAC,qBAAqB,CAAC;EAC/B;EACAC,eAAeA,CAAA,EAAI;IACf,IAAI,CAACF,UAAU,CAACG,KAAK,CAAC,CAAC;EAC/B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIN,QAAQ,CAAC,CAAC"}},"mtime":1707923363376},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"filename\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\\\\test\\\\page\\\\isdisplayed.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Levchenko_Oleksii\\\\Desktop\\\\FinalProject\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"class browseDocs {\n  get DocsIsDisplayed() {\n    return $('//*[text()=\"Browse Docs\"]');\n  }\n  browseDocsIsDisplayed() {\n    this.DocsIsDisplayed.isDisplayed();\n    console.log();\n  }\n}\nmodule.exports = new browseDocs();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VEb2NzIiwiRG9jc0lzRGlzcGxheWVkIiwiJCIsImJyb3dzZURvY3NJc0Rpc3BsYXllZCIsImlzRGlzcGxheWVkIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTGV2Y2hlbmtvX09sZWtzaWlcXERlc2t0b3BcXEZpbmFsUHJvamVjdFxcdGVzdFxccGFnZVxcIiwic291cmNlcyI6WyJpc2Rpc3BsYXllZC5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGJyb3dzZURvY3Mge1xyXG5cclxuICAgIGdldCBEb2NzSXNEaXNwbGF5ZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuICQoJy8vKlt0ZXh0KCk9XCJCcm93c2UgRG9jc1wiXScpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGJyb3dzZURvY3NJc0Rpc3BsYXllZCAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuRG9jc0lzRGlzcGxheWVkLmlzRGlzcGxheWVkKCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IGJyb3dzZURvY3MoKSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxDQUFDO0VBRWIsSUFBSUMsZUFBZUEsQ0FBQSxFQUFHO0lBQ2xCLE9BQU9DLENBQUMsQ0FBQywyQkFBMkIsQ0FBQztFQUNyQztFQUNBQyxxQkFBcUJBLENBQUEsRUFBSTtJQUNyQixJQUFJLENBQUNGLGVBQWUsQ0FBQ0csV0FBVyxDQUFDLENBQUM7SUFDbENDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQUM7RUFDckI7QUFDSjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxJQUFJUixVQUFVLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["browseDocs","DocsIsDisplayed","$","browseDocsIsDisplayed","isDisplayed","console","log","module","exports"],"sourceRoot":"C:\\Users\\Levchenko_Oleksii\\Desktop\\FinalProject\\test\\page\\","sources":["isdisplayed.page.js"],"sourcesContent":["class browseDocs {\r\n\r\n    get DocsIsDisplayed() {\r\n        return $('//*[text()=\"Browse Docs\"]')\r\n        }\r\n        browseDocsIsDisplayed () {\r\n            this.DocsIsDisplayed.isDisplayed();\r\n            console.log();\r\n    }\r\n}\r\n\r\nmodule.exports = new browseDocs()"],"mappings":"AAAA,MAAMA,UAAU,CAAC;EAEb,IAAIC,eAAeA,CAAA,EAAG;IAClB,OAAOC,CAAC,CAAC,2BAA2B,CAAC;EACrC;EACAC,qBAAqBA,CAAA,EAAI;IACrB,IAAI,CAACF,eAAe,CAACG,WAAW,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,CAAC;EACrB;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIR,UAAU,CAAC,CAAC"}},"mtime":1707925492258}}